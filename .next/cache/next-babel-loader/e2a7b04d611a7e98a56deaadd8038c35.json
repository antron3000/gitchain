{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/new/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Container, Form, Input } from \"semantic-ui-react\";\n\nclass NewProject extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      projName: \"\"\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, __jsx(Form.Input, {\n      fluid: true,\n      label: \"Project Name\",\n      placeholder: \"Project Name\",\n      value: this.state.projName,\n      onChange: event => this.setState({\n        projName: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      label: \"Upload File\",\n      type: \"file\",\n      onChange: event => this.captureFile(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), __jsx(Form.Input, {\n      label: \"Upload File\",\n      type: \"file\",\n      onChange: event => this.captureFile(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NewProject;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/new/index.js"],"names":["React","Component","Layout","projhub","web3","Container","Form","Input","NewProject","projName","render","state","event","setState","target","value","captureFile"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,QAAuC,mBAAvC;;AAEA,MAAMC,UAAN,SAAyBP,SAAzB,CAAmC;AAAA;AAAA;;AAAA,mCACzB;AACNQ,MAAAA,QAAQ,EAAE;AADJ,KADyB;AAAA;;AAKjCC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,MADP;AAEE,MAAA,KAAK,EAAC,cAFR;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,KAAK,EAAE,KAAKC,KAAL,CAAWF,QAJpB;AAKE,MAAA,QAAQ,EAAEG,KAAK,IACb,KAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAEG,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAGH,KAAK,IAAI,KAAKI,WAAL,CAAiBJ,KAAjB,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAeE,MAAC,IAAD,CAAM,KAAN;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAGA,KAAK,IAAI,KAAKI,WAAL,CAAiBJ,KAAjB,CAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,CADF,CADF,CADF;AA2BD;;AAjCgC;;AAoCnC,eAAeJ,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Container, Form, Input } from \"semantic-ui-react\";\n\nclass NewProject extends Component {\n  state = {\n    projName: \"\"\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Form>\n            <Form.Input\n              fluid\n              label=\"Project Name\"\n              placeholder=\"Project Name\"\n              value={this.state.projName}\n              onChange={event =>\n                this.setState({ projName: event.target.value })\n              }\n            />\n            <Form.Input \n              label=\"Upload File\"\n              type=\"file\"\n              onChange={ event => this.captureFile(event) }\n            />\n            <Form.Input \n              label=\"Upload File\"\n              type=\"file\"\n              onChange={ event => this.captureFile(event) }\n            />\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default NewProject;\n"]},"metadata":{},"sourceType":"module"}