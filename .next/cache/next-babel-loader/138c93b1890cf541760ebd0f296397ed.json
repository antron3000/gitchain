{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/new/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../routes\";\n\nvar NewProject = /*#__PURE__*/function (_Component) {\n  _inherits(NewProject, _Component);\n\n  function NewProject() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewProject);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewProject)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projName: \"\",\n      description: \"\",\n      file1: \"\",\n      fileName: \"\",\n      fileBuffer: [],\n      fileNames: [],\n      uid: 0,\n      username: \"\",\n      account: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var uid, projName, acc, date, timestamp, fileBuffer, filesHash, i, ipfsHash;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              console.log(_this.state.fileBuffer);\n              console.log(_this.state.fileNames);\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.prev = 4;\n              uid = _this.state.uid;\n              projName = _this.state.projName;\n              acc = _this.state.account;\n              date = new Date();\n              date.setHours(date.getHours() + 5);\n              date.setMinutes(date.getMinutes() + 30);\n              timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n              fileBuffer = _this.state.fileBuffer;\n              filesHash = [];\n              i = 0;\n\n            case 15:\n              if (!(i < fileBuffer.length)) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.next = 18;\n              return _regeneratorRuntime.awrap(ipfs.add(fileBuffer[i]));\n\n            case 18:\n              ipfsHash = _context.sent;\n              filesHash.push(ipfsHash[0].hash);\n\n            case 20:\n              i++;\n              _context.next = 15;\n              break;\n\n            case 23:\n              console.log(acc, filesHash);\n              _context.next = 26;\n              return _regeneratorRuntime.awrap(projhub.methods.createProject(uid, projName, filesHash, timestamp).send({\n                from: acc\n              }));\n\n            case 26:\n              Router.pushRoute(\"/\");\n              _context.next = 32;\n              break;\n\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0.message);\n\n            case 32:\n              _this.setState({\n                loading: false\n              });\n\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 29]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      // event.stopPropogation();\n      event.preventDefault();\n      var file = event.target.files[0];\n\n      _this.setState({\n        file1: URL.createObjectURL(file)\n      }); // console.log(file);\n\n\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader, file.name);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToBuffer\", function _callee2(reader, fname) {\n      var buffer, fileBuffer, fileNames;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Buffer.from(reader.result));\n\n            case 2:\n              buffer = _context2.sent;\n              fileBuffer = _this.state.fileBuffer;\n              fileNames = _this.state.fileNames;\n              fileBuffer.push(buffer);\n              fileNames.push(fname);\n\n              _this.setState({\n                fileBuffer: fileBuffer,\n                fileNames: fileNames\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(NewProject, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var account, userDetails;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              account = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(projhub.methods.getUserDetails(account[0]).call());\n\n            case 5:\n              userDetails = _context3.sent;\n              this.setState({\n                account: account[0],\n                uid: userDetails[0],\n                username: userDetails[2]\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, __jsx(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Project Name\"), __jsx(Form.Input, {\n        fluid: true,\n        style: {\n          fontSize: \"15px\"\n        },\n        placeholder: \"Project Name\",\n        value: this.state.projName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            projName: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Project Description\"), __jsx(Form.TextArea, {\n        rows: \"8\",\n        style: {\n          fontSize: \"15px\"\n        },\n        placeholder: \"Project Description\",\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Upload File 1\"), __jsx(Form.Input, {\n        style: {\n          fontSize: \"15px\"\n        },\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.captureFile(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Upload File 2\"), __jsx(Form.Input, {\n        style: {\n          fontSize: \"15px\"\n        },\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.captureFile(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), __jsx(Button, {\n        loading: this.state.loading,\n        content: \"Create Project\",\n        size: \"medium\",\n        color: \"teal\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return NewProject;\n}(Component);\n\nexport default NewProject;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/new/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Container","Form","Input","Button","Router","Link","NewProject","projName","description","file1","fileName","fileBuffer","fileNames","uid","username","account","loading","event","preventDefault","console","log","state","setState","acc","date","Date","setHours","getHours","setMinutes","getMinutes","timestamp","toUTCString","replace","filesHash","i","length","add","ipfsHash","push","hash","methods","createProject","send","from","pushRoute","message","file","target","files","URL","createObjectURL","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","name","fname","Buffer","result","buffer","eth","getAccounts","getUserDetails","call","userDetails","onSubmit","fontSize","value","captureFile"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../routes\";\n\nclass NewProject extends Component {\n  state = {\n    projName: \"\",\n    description: \"\",\n    file1: \"\",\n    fileName: \"\",\n    fileBuffer: [],\n    fileNames: [],\n    uid: 0,\n    username: \"\",\n    account: \"\",\n    loading: false\n  };\n\n  async componentDidMount () {\n    const account = await web3.eth.getAccounts();\n    const userDetails = await projhub.methods.getUserDetails(account[0]).call();\n\n    this.setState({ account: account[0], uid: userDetails[0], username: userDetails[2] });\n\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(this.state.fileBuffer);\n    console.log(this.state.fileNames);\n    this.setState({ loading: true });\n    try {\n      const uid = this.state.uid;\n      const projName = this.state.projName;\n      const acc = this.state.account;\n      const date = new Date();\n      date.setHours(date.getHours() + 5);\n      date.setMinutes(date.getMinutes() + 30);\n      const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n\n      const fileBuffer = this.state.fileBuffer;\n      let filesHash = [];\n      for (var i=0; i<fileBuffer.length; i++) {\n        const ipfsHash = await ipfs.add(fileBuffer[i]);\n        filesHash.push(ipfsHash[0].hash);\n      }\n      console.log(acc, filesHash);\n\n      await projhub.methods\n        .createProject(uid, projName, filesHash, timestamp)\n        .send({ from: acc });\n      \n      Router.pushRoute(\"/\");\n    }\n    catch(err) {\n      console.log(err.message);\n    }\n    this.setState({ loading: false });\n\n  }\n\n  captureFile = event => {\n    // event.stopPropogation();\n    event.preventDefault();\n\n    const file = event.target.files[0];\n    this.setState({ file1: URL.createObjectURL(file) });\n    // console.log(file);\n    \n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader, file.name);\n  }\n\n  convertToBuffer = async (reader, fname) => {\n    const buffer = await Buffer.from(reader.result);\n    let fileBuffer = this.state.fileBuffer;\n    let fileNames = this.state.fileNames;\n    fileBuffer.push(buffer);\n    fileNames.push(fname);\n    this.setState({ fileBuffer: fileBuffer, fileNames: fileNames });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Form onSubmit={this.onSubmit}>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Name</label>\n              <Form.Input\n                fluid\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Name\"\n                value={this.state.projName}\n                onChange={event =>\n                  this.setState({ projName: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Description</label>\n              <Form.TextArea\n                rows=\"8\"\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Description\"\n                value={this.state.description}\n                onChange={event =>\n                  this.setState({ description: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 1</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 2</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Button loading={this.state.loading} content=\"Create Project\" size=\"medium\" color=\"teal\" fluid/>\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default NewProject;\n"]},"metadata":{},"sourceType":"module"}