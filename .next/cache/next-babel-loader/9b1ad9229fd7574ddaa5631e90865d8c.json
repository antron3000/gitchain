{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/projects/show/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../../routes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n\nvar ShowFile = /*#__PURE__*/function (_Component) {\n  _inherits(ShowFile, _Component);\n\n  function ShowFile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowFile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowFile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projId: 0,\n      fileIndex: 0,\n      fileHash: \"\",\n      fileContent: \"\",\n      fileName: \"\",\n      userAcc: \"\",\n      projName: \"\",\n      language: \"\"\n    });\n\n    return _this;\n  }\n\n  _createClass(ShowFile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userAdd, projId, fileIndex, accounts, projDetails, projName, fileHash, fileName, language, data;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(this.props.projIndex);\n              userAdd = this.props.userAdd;\n              projId = this.props.projIndex;\n              fileIndex = this.props.fileIndex;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 6:\n              accounts = _context.sent;\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(projhub.methods.getProjectDetails(userAdd, projId).call());\n\n            case 9:\n              projDetails = _context.sent;\n              projName = projDetails[1];\n              fileHash = projDetails[4][fileIndex];\n              fileName = projDetails[5][fileIndex];\n              console.log(fileName);\n              language = fileName.split(\".\")[1];\n              _context.next = 17;\n              return _regeneratorRuntime.awrap(ipfs.files.get(fileHash));\n\n            case 17:\n              data = _context.sent;\n              this.setState({\n                projId: projId,\n                projName: projName,\n                fileIndex: fileIndex,\n                fileName: fileName,\n                userAcc: accounts[0],\n                fileHash: fileHash,\n                fileContent: data[0].content.toString(),\n                language: language\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, __jsx(Container, {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        style: {\n          color: \"grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.projName, this.state.fileName), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          border: \"1px solid\",\n          borderColor: \"grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(SyntaxHighlighter, {\n        customStyle: {\n          fontSize: \"16px\"\n        },\n        language: this.state.language,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.fileContent)), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", {\n                userAdd: props.query.address,\n                projIndex: props.query.pid,\n                fileIndex: props.query.fid\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return ShowFile;\n}(Component);\n\nexport default ShowFile;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/projects/show/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Container","Form","Input","Button","Router","Link","Prism","SyntaxHighlighter","ShowFile","projId","fileIndex","fileHash","fileContent","fileName","userAcc","projName","language","console","log","props","projIndex","userAdd","eth","getAccounts","accounts","methods","getProjectDetails","call","projDetails","split","files","get","data","setState","content","toString","padding","color","state","border","borderColor","fontSize","query","address","pid","fid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../../routes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n\n\nclass ShowFile extends Component {\n  state = {\n    projId: 0,\n    fileIndex: 0,\n    fileHash: \"\",\n    fileContent: \"\",\n    fileName: \"\",\n    userAcc: \"\",\n    projName: \"\",\n    language: \"\"\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userAdd: props.query.address,\n      projIndex: props.query.pid,\n      fileIndex: props.query.fid\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.projIndex);\n    const userAdd = this.props.userAdd;\n    const projId = this.props.projIndex;\n    const fileIndex = this.props.fileIndex;\n    const accounts = await web3.eth.getAccounts();\n    const projDetails = await projhub.methods\n      .getProjectDetails(userAdd, projId)\n      .call();\n    const projName = projDetails[1];\n    const fileHash = projDetails[4][fileIndex];\n    const fileName = projDetails[5][fileIndex];\n    \n    console.log(fileName);\n\n    const language = fileName.split(\".\")[1];\n    const data = await ipfs.files.get(fileHash);\n\n    this.setState({\n      projId: projId,\n      projName: projName,\n      fileIndex: fileIndex,\n      fileName: fileName,\n      userAcc: accounts[0],\n      fileHash: fileHash,\n      fileContent: data[0].content.toString(),\n      language: language\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container style={{ padding: \"10px\" }}>\n          <h3 style={{ color: \"grey\" }}>\n            {this.state.projName}{this.state.fileName}\n          </h3>\n          <hr />\n          <div\n            style={{\n              border: \"1px solid\",\n              borderColor: \"grey\",\n            }}\n          >\n            <SyntaxHighlighter customStyle={{fontSize:\"16px\"}} language={this.state.language}>\n              {this.state.fileContent}\n            </SyntaxHighlighter>\n              {/* {this.state.fileContent.split(\"\\n\").map((line, key) => {\n                return (\n                  <SyntaxHighlighter key={key} language=\"cpp\">\n                    <p style={{ margin: \"0px\", fontSize: \"16px\", whiteSpace: \"break-spaces\"}}>{line}</p>\n                  </SyntaxHighlighter>\n                );\n              })} */}\n          </div>\n          <br />\n          <br />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ShowFile;\n\n"]},"metadata":{},"sourceType":"module"}