{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\n\nclass DisplayUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      userIndex: 0,\n      userName: \"\",\n      userAddress: \"\",\n      userEmail: \"\",\n      userProjCount: 0,\n      projects: [],\n      projCards: []\n    });\n\n    _defineProperty(this, \"renderProjcards\", () => {\n      const projCards = this.state.projects.map((proj, index) => {\n        return {\n          header: __jsx(Link, {\n            route: `/projects/${proj[0]}`\n          }, __jsx(\"a\", null, __jsx(\"h4\", null, proj[1]))),\n          description: __jsx(\"p\", {\n            style: {\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\"\n            }\n          }, proj[3]),\n          extra: __jsx(\"p\", null, proj[2])\n        };\n      });\n      this.setState({\n        projCards: projCards\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n    let projects = [];\n\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods.getProjectDetails(userDetails[1], i).call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n    this.renderProjcards();\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(Container, null, __jsx(Grid, null, __jsx(Grid.Column, {\n      width: \"5\",\n      style: {\n        marginTop: \"20px\"\n      }\n    }, __jsx(\"div\", null, __jsx(\"h2\", {\n      style: {\n        marginBottom: \"0px\"\n      }\n    }, this.state.userName), __jsx(\"p\", {\n      style: {\n        color: \"grey\",\n        marginTop: \"0px\",\n        fontSize: \"14px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n      }\n    }, this.state.userAddress), __jsx(\"p\", {\n      style: {\n        fontSize: \"15px\"\n      }\n    }, \"Email: \", this.state.userEmail), __jsx(Button, {\n      color: \"teal\",\n      content: \"Follow\"\n    }))), __jsx(Grid.Column, {\n      width: \"10\",\n      style: {\n        borderLeft: \"1px solid\",\n        borderColor: \"lightgrey\",\n        marginTop: \"20px\",\n        padding: \"10px\"\n      }\n    }, __jsx(Card.Group, {\n      items: this.state.projCards\n    })))));\n  }\n\n}\n\nexport default DisplayUser;","map":null,"metadata":{},"sourceType":"module"}