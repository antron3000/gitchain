{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/new/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Container, Form, Input } from \"semantic-ui-react\";\n\nvar fs = require(\"fs\");\n\nvar NewProject = /*#__PURE__*/function (_Component) {\n  _inherits(NewProject, _Component);\n\n  function NewProject() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewProject);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewProject)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projName: \"\",\n      file1: \"\",\n      file2: \"\",\n      fileBuffer: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      // event.stopPropogation();\n      event.preventDefault();\n      var file = event.target.files[0];\n\n      _this.setState({\n        file1: URL.createObjectURL(file)\n      });\n\n      console.log(file);\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToBuffer\", function _callee(reader) {\n      var buffer, fileBuffer;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Buffer.from(reader.result));\n\n            case 2:\n              buffer = _context.sent;\n              fileBuffer = _this.state.fileBuffer;\n              fileBuffer.push(buffer);\n\n              _this.setState({\n                fileBuffer: fileBuffer\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(NewProject, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Project Name\"), __jsx(Form.Input, {\n        fluid: true,\n        style: {\n          fontSize: \"15px\"\n        },\n        placeholder: \"Project Name\",\n        value: this.state.projName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            projName: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Upload File 1\"), __jsx(Form.Input, {\n        style: {\n          fontSize: \"15px\"\n        },\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.captureFile(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Upload File 2\"), __jsx(Form.Input, {\n        style: {\n          fontSize: \"15px\"\n        },\n        type: \"file\",\n        onChange: function onChange(event) {\n          return _this2.captureFile(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return NewProject;\n}(Component);\n\nexport default NewProject;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/new/index.js"],"names":["React","Component","Layout","projhub","web3","Container","Form","Input","fs","require","NewProject","projName","file1","file2","fileBuffer","event","preventDefault","file","target","files","setState","URL","createObjectURL","console","log","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","Buffer","from","result","buffer","state","push","fontSize","value","captureFile"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Container, Form, Input } from \"semantic-ui-react\";\nconst fs = require(\"fs\");\n\nclass NewProject extends Component {\n  state = {\n    projName: \"\",\n    file1: \"\",\n    file2: \"\",\n    fileBuffer: []\n  };\n\n  captureFile = event => {\n    // event.stopPropogation();\n    event.preventDefault();\n\n    const file = event.target.files[0];\n    this.setState({ file1: URL.createObjectURL(file) });\n    console.log(file);\n\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader);\n  }\n\n  convertToBuffer = async reader => {\n    const buffer = await Buffer.from(reader.result);\n    let fileBuffer = this.state.fileBuffer;\n    fileBuffer.push(buffer);\n    this.setState({ fileBuffer: fileBuffer });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Form>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Name</label>\n              <Form.Input\n                fluid\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Name\"\n                value={this.state.projName}\n                onChange={event =>\n                  this.setState({ projName: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 1</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 2</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default NewProject;\n"]},"metadata":{},"sourceType":"module"}