{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/users/display/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container } from \"semantic-ui-react\";\n\nclass DisplayUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      userIndex: 0,\n      userName: \"\",\n      userAddress: \"\",\n      userEmail: \"\",\n      userProjCount: 0,\n      projects: [],\n      projCards: []\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n    let projects = [];\n\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods.getProjectDetails(userDetails[1], i).call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"5\",\n      style: {\n        marginTop: \"20px\",\n        border: \"1px solid\",\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      style: {\n        marginBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.state.userName), __jsx(\"p\", {\n      style: {\n        color: \"grey\",\n        marginTop: \"0px\",\n        fontSize: \"14px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.userAddress), __jsx(\"p\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Email: \", this.state.userEmail))), __jsx(Grid.Column, {\n      width: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default DisplayUser;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/users/display/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Grid","Container","DisplayUser","userIndex","userName","userAddress","userEmail","userProjCount","projects","projCards","getInitialProps","props","query","index","componentDidMount","userDetails","methods","users","call","i","proj","getProjectDetails","push","setState","console","log","render","marginTop","border","padding","marginBottom","state","color","fontSize","overflow","textOverflow"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNQ,MAAAA,SAAS,EAAE,CADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,aAAa,EAAE,CALT;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,SAAS,EAAE;AAPL,KAD0B;AAAA;;AAWlC,eAAaC,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,WAAO;AACLR,MAAAA,SAAS,EAAEQ,KAAK,CAACC,KAAN,CAAYC;AADlB,KAAP;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMX,SAAS,GAAG,KAAKQ,KAAL,CAAWR,SAA7B;AACA,UAAMY,WAAW,GAAG,MAAMlB,OAAO,CAACmB,OAAR,CAAgBC,KAAhB,CAAsBd,SAAtB,EAAiCe,IAAjC,EAA1B;AAEA,QAAIV,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIW,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,WAAW,CAAC,CAAD,CAA/B,EAAoCI,CAAC,EAArC,EAAyC;AACvC,YAAMC,IAAI,GAAG,MAAMvB,OAAO,CAACmB,OAAR,CAAgBK,iBAAhB,CAAkCN,WAAW,CAAC,CAAD,CAA7C,EAAkDI,CAAlD,EAAqDD,IAArD,EAAnB;AACAV,MAAAA,QAAQ,CAACc,IAAT,CAAcF,IAAd;AACD;;AAED,SAAKG,QAAL,CAAc;AACZpB,MAAAA,SAAS,EAAEA,SADC;AAEZE,MAAAA,WAAW,EAAEU,WAAW,CAAC,CAAD,CAFZ;AAGZX,MAAAA,QAAQ,EAAEW,WAAW,CAAC,CAAD,CAHT;AAIZT,MAAAA,SAAS,EAAES,WAAW,CAAC,CAAD,CAJV;AAKZR,MAAAA,aAAa,EAAEQ,WAAW,CAAC,CAAD,CALd;AAMZP,MAAAA,QAAQ,EAAEA;AANE,KAAd;AAQAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,QAAZ;AACD;;AAEDkB,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,GAAnB;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAC,MAAZ;AAAoBC,QAAAA,MAAM,EAAE,WAA5B;AAAyCC,QAAAA,OAAO,EAAC;AAAjD,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAC;AAAf,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKC,KAAL,CAAW3B,QAA9C,CADF,EAEE;AAAG,MAAA,KAAK,EAAE;AAAC4B,QAAAA,KAAK,EAAC,MAAP;AAAeL,QAAAA,SAAS,EAAC,KAAzB;AAAgCM,QAAAA,QAAQ,EAAC,MAAzC;AAAiDC,QAAAA,QAAQ,EAAC,QAA1D;AAAoEC,QAAAA,YAAY,EAAC;AAAjF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyG,KAAKJ,KAAL,CAAW1B,WAApH,CAFF,EAGE;AAAG,MAAA,KAAK,EAAE;AAAC4B,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC,KAAKF,KAAL,CAAWzB,SAAhD,CAHF,CADF,CADF,EAQE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF,CADF,CADF;AAgBD;;AAvDiC;;AA0DpC,eAAeJ,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container } from \"semantic-ui-react\";\n\nclass DisplayUser extends Component {\n  state = {\n    userIndex: 0,\n    userName: \"\",\n    userAddress: \"\",\n    userEmail: \"\",\n    userProjCount: 0,\n    projects: [],\n    projCards: []\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n\n    let projects = [];\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods.getProjectDetails(userDetails[1], i).call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Grid>\n            <Grid.Column width=\"5\" style={{ marginTop:\"20px\", border: \"1px solid\", padding:\"10px\" }}>\n              <div>\n                <h2 style={{ marginBottom:\"0px\"}}>{this.state.userName}</h2>\n                <p style={{color:\"grey\", marginTop:\"0px\", fontSize:\"14px\", overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{this.state.userAddress}</p>\n                <p style={{fontSize:\"15px\"}}>Email: {this.state.userEmail}</p>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"10\"></Grid.Column>\n          </Grid>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default DisplayUser;\n"]},"metadata":{},"sourceType":"module"}