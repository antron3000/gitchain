{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button } from \"semantic-ui-react\";\n\nvar ProjIndex = /*#__PURE__*/function (_Component) {\n  _inherits(ProjIndex, _Component);\n\n  function ProjIndex() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProjIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProjIndex)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      account: \"\",\n      username: \"\",\n      useremail: \"\",\n      userid: \"\",\n      projCount: 0,\n      isUser: false,\n      name: \"\",\n      email: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderProjects\", function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(_this.state.projCount);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createUser\", function _callee2() {\n      var name, email, acc;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              name = _this.state.name;\n              email = _this.state.email;\n              acc = _this.state.account;\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(projhub.methods.createUser(name, email).send({\n                from: acc\n              }));\n\n            case 6:\n              console.log(\"User Registered\");\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0.message);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 9]], Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ProjIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var accs, isUser, userDetails;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              accs = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(projhub.methods.isUser(accs[0]).call());\n\n            case 5:\n              isUser = _context3.sent;\n              console.log(isUser);\n              this.setState({\n                account: accs[0],\n                manager: manager,\n                isUser: isUser\n              });\n\n              if (!isUser) {\n                _context3.next = 13;\n                break;\n              }\n\n              _context3.next = 11;\n              return _regeneratorRuntime.awrap(projhub.methods.getUserDetails(accs[0]).call());\n\n            case 11:\n              userDetails = _context3.sent;\n              this.setState({\n                userid: userDetails[0],\n                username: userDetails[2],\n                email: userDetails[3],\n                projCount: userDetails[4]\n              });\n\n            case 13:\n              this.renderProjects();\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, __jsx(Grid, {\n        style: {\n          margin: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        width: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.state.account)), __jsx(Grid.Column, {\n        width: \"4\",\n        style: {\n          border: \"2px solid\",\n          borderColor: \"grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          width: \"15%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Name:\"), __jsx(Input, {\n        style: {\n          width: \"70%\"\n        },\n        placeholder: \"Name\",\n        disabled: this.state.isUser,\n        value: this.state.name,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            name: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        inline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          width: \"15%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Email:\"), __jsx(Input, {\n        style: {\n          width: \"70%\"\n        },\n        placeholder: \"Email\",\n        disabled: this.state.isUser,\n        value: this.state.email,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            email: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), __jsx(Button, {\n        fluid: true,\n        color: \"teal\",\n        size: \"medium\",\n        content: \"Sign Up\",\n        onClick: this.createUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return ProjIndex;\n}(Component);\n\nexport default ProjIndex;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/index.js"],"names":["React","Component","Layout","projhub","web3","Grid","Form","Input","Button","ProjIndex","account","username","useremail","userid","projCount","isUser","name","email","console","log","state","acc","methods","createUser","send","from","message","eth","getAccounts","accs","call","setState","manager","getUserDetails","userDetails","renderProjects","margin","border","borderColor","width","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  state = {\n    account: \"\",\n    username: \"\",\n    useremail: \"\",\n    userid: \"\",\n    projCount: 0,\n    isUser: false,\n    name: \"\",\n    email: \"\"\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n\n    console.log(isUser);\n    this.setState({ account: accs[0], manager: manager, isUser: isUser});\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4]\n      });\n    }\n    \n    this.renderProjects();\n  }\n\n  renderProjects = async () => {\n\n    console.log(this.state.projCount);\n\n  }\n\n  createUser = async () => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const acc = this.state.account;\n\n    try {\n      await projhub.methods\n        .createUser(name, email)\n        .send({ from: acc});\n\n      console.log(\"User Registered\");\n    }\n    catch(err) {\n      console.log(err.message);\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Grid style={{ margin: \"10px\" }}>\n            <Grid.Column width=\"12\">\n              <h2>{this.state.account}</h2>\n            </Grid.Column>\n            <Grid.Column\n              width=\"4\"\n              style={{ border: \"2px solid\", borderColor: \"grey\" }}\n            >\n              <Form>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Name:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Name\"\n                    disabled={this.state.isUser}\n                    value={this.state.name}\n                    onChange={event =>\n                      this.setState({ name: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Email:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Email\"\n                    disabled={this.state.isUser}\n                    value={this.state.email}\n                    onChange={event =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Button\n                  fluid\n                  color=\"teal\"\n                  size=\"medium\"\n                  content=\"Sign Up\"\n                  onClick={this.createUser}\n                />\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjIndex;\n"]},"metadata":{},"sourceType":"module"}