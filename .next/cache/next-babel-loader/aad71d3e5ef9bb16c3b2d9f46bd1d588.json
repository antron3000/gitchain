{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/projects/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router, Link } from \"../../routes\";\nimport { List, Container } from \"semantic-ui-react\";\n\nclass ShowProject extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      projId: 0,\n      projName: \"\",\n      projTime: \"\",\n      projFileHashes: [],\n      projDescription: \"\",\n      projFileNames: [],\n      files: []\n    });\n\n    _defineProperty(this, \"renderFiles\", async () => {\n      const files = this.state.projFileNames.map((file, index) => {\n        return __jsx(List.Item, {\n          key: index,\n          style: {\n            padding: \"10px\",\n            margin: \"10px\",\n            border: \"1px solid\",\n            borderColor: \"grey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, __jsx(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, __jsx(List.Header, {\n          style: {\n            marginBottom: \"10px\",\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, __jsx(Link, {\n          route: `/projects/${this.state.projId}/${file}`,\n          params: {\n            projName: this.state.projName\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, file)))));\n      });\n      this.setState({\n        files: files\n      });\n    });\n  }\n\n  static getInitialProps(props) {\n    return {\n      projId: props.query.id\n    };\n  }\n\n  async componentDidMount() {\n    const projId = this.props.projId;\n    const accounts = await web3.eth.getAccounts();\n    const projDetails = await projhub.methods.getProjectDetails(accounts[0], projId).call();\n    this.setState({\n      projId: projId,\n      projName: projDetails[1],\n      projTime: projDetails[2],\n      projDescription: projDetails[3],\n      projFileHashes: projDetails[4],\n      projFileNames: projDetails[5]\n    });\n    console.log(projId);\n    this.renderFiles();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.projName), __jsx(List, {\n      items: this.state.files,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ShowProject;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/projects/index.js"],"names":["React","Component","Layout","projhub","web3","Router","Link","List","Container","ShowProject","projId","projName","projTime","projFileHashes","projDescription","projFileNames","files","state","map","file","index","padding","margin","border","borderColor","marginBottom","fontSize","setState","getInitialProps","props","query","id","componentDidMount","accounts","eth","getAccounts","projDetails","methods","getProjectDetails","call","console","log","renderFiles","render","marginLeft"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,cAA7B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,mBAAhC;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNS,MAAAA,MAAM,EAAE,CADF;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,QAAQ,EAAE,EAHJ;AAINC,MAAAA,cAAc,EAAE,EAJV;AAKNC,MAAAA,eAAe,EAAE,EALX;AAMNC,MAAAA,aAAa,EAAE,EANT;AAONC,MAAAA,KAAK,EAAE;AAPD,KAD0B;;AAAA,yCAqCpB,YAAY;AACxB,YAAMA,KAAK,GAAG,KAAKC,KAAL,CAAWF,aAAX,CAAyBG,GAAzB,CAA6B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1D,eACE,MAAC,IAAD,CAAM,IAAN;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,OAAO,EAAE,MADJ;AAELC,YAAAA,MAAM,EAAE,MAFH;AAGLC,YAAAA,MAAM,EAAE,WAHH;AAILC,YAAAA,WAAW,EAAE;AAJR,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE,MAAhB;AAAwBC,YAAAA,QAAQ,EAAE;AAAlC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAG,aAAY,KAAKT,KAAL,CAAWP,MAAO,IAAGS,IAAK,EAApD;AAAuD,UAAA,MAAM,EAAE;AAACR,YAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWN;AAAtB,WAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIQ,IAAJ,CADF,CADF,CADF,CATF,CADF;AAmBD,OApBa,CAAd;AAqBA,WAAKQ,QAAL,CAAc;AAAEX,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KA5DiC;AAAA;;AAWlC,SAAOY,eAAP,CAAuBC,KAAvB,EAA8B;AAC5B,WAAO;AACLnB,MAAAA,MAAM,EAAEmB,KAAK,CAACC,KAAN,CAAYC;AADf,KAAP;AAGD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMtB,MAAM,GAAG,KAAKmB,KAAL,CAAWnB,MAA1B;AACA,UAAMuB,QAAQ,GAAG,MAAM7B,IAAI,CAAC8B,GAAL,CAASC,WAAT,EAAvB;AACA,UAAMC,WAAW,GAAG,MAAMjC,OAAO,CAACkC,OAAR,CACvBC,iBADuB,CACLL,QAAQ,CAAC,CAAD,CADH,EACQvB,MADR,EAEvB6B,IAFuB,EAA1B;AAIA,SAAKZ,QAAL,CAAc;AACZjB,MAAAA,MAAM,EAAEA,MADI;AAEZC,MAAAA,QAAQ,EAAEyB,WAAW,CAAC,CAAD,CAFT;AAGZxB,MAAAA,QAAQ,EAAEwB,WAAW,CAAC,CAAD,CAHT;AAIZtB,MAAAA,eAAe,EAAEsB,WAAW,CAAC,CAAD,CAJhB;AAKZvB,MAAAA,cAAc,EAAEuB,WAAW,CAAC,CAAD,CALf;AAMZrB,MAAAA,aAAa,EAAEqB,WAAW,CAAC,CAAD;AANd,KAAd;AAQAI,IAAAA,OAAO,CAACC,GAAR,CAAY/B,MAAZ;AAEA,SAAKgC,WAAL;AACD;;AA2BDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAK3B,KAAL,CAAWN,QAA5C,CADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWD,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAvEiC;;AA0EpC,eAAeP,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router, Link } from \"../../routes\";\nimport { List, Container } from \"semantic-ui-react\";\n\nclass ShowProject extends Component {\n  state = {\n    projId: 0,\n    projName: \"\",\n    projTime: \"\",\n    projFileHashes: [],\n    projDescription: \"\",\n    projFileNames: [],\n    files: []\n  };\n\n  static getInitialProps(props) {\n    return {\n      projId: props.query.id\n    };\n  }\n\n  async componentDidMount() {\n    const projId = this.props.projId;\n    const accounts = await web3.eth.getAccounts();\n    const projDetails = await projhub.methods\n      .getProjectDetails(accounts[0], projId)\n      .call();\n\n    this.setState({\n      projId: projId,\n      projName: projDetails[1],\n      projTime: projDetails[2],\n      projDescription: projDetails[3],\n      projFileHashes: projDetails[4],\n      projFileNames: projDetails[5]\n    });\n    console.log(projId);\n\n    this.renderFiles();\n  }\n\n  renderFiles = async () => {\n    const files = this.state.projFileNames.map((file, index) => {\n      return (\n        <List.Item\n          key={index}\n          style={{\n            padding: \"10px\",\n            margin: \"10px\",\n            border: \"1px solid\",\n            borderColor: \"grey\"\n          }}\n        >\n          <List.Content>\n            <List.Header style={{ marginBottom: \"10px\", fontSize: \"18px\" }}>\n              <Link route={`/projects/${this.state.projId}/${file}`} params={{projName: this.state.projName}}>\n                <a>{file}</a>\n              </Link>\n            </List.Header>\n          </List.Content>\n        </List.Item>\n      );\n    });\n    this.setState({ files: files });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <h4 style={{marginLeft:\"10px\"}}>{this.state.projName}</h4>\n          <List items={this.state.files} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ShowProject;\n"]},"metadata":{},"sourceType":"module"}