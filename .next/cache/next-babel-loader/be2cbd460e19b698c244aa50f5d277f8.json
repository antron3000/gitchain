{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/users/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport web3 from \"../../ethereum/web3\";\nimport projhub from \"../../ethereum/projhub\";\nimport { Container, List } from \"semantic-ui-react\";\n\nclass Users extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      users: [],\n      userCount: 0,\n      usersList: []\n    });\n\n    _defineProperty(this, \"renderUsers\", () => {\n      const usersList = this.state.users.map((user, index) => {\n        return __jsx(List.Item, {\n          key: index,\n          style: {\n            padding: \"10px\",\n            border: \"1px solid\",\n            borderColour: \"lightgrey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, __jsx(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, __jsx(List.Header, {\n          style: {\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, user.name), __jsx(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          style: {\n            marginBottom: \"0px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Address: \", user.owner), __jsx(\"p\", {\n          style: {\n            marginTop: \"0px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Projects: \", user.projCount)))));\n      });\n      this.setState({\n        usersList: usersList\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userCount = await projhub.methods.userCount().call();\n    let users = [];\n\n    for (var i = 0; i < userCount; i++) {\n      const user = await projhub.methods.users(i).call();\n      users.push(user);\n    }\n\n    console.log(users);\n    this.setState({\n      account: accs[0],\n      userCount: userCount,\n      users: users\n    });\n    this.renderUsers();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(Container, {\n      style: {\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Users\"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), __jsx(List, {\n      items: this.state.usersList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/users/index.js"],"names":["React","Component","Layout","web3","projhub","Container","List","Users","users","userCount","usersList","state","map","user","index","padding","border","borderColour","fontSize","name","marginBottom","owner","marginTop","projCount","setState","componentDidMount","accs","eth","getAccounts","methods","call","i","push","console","log","account","renderUsers","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport web3 from \"../../ethereum/web3\";\nimport projhub from \"../../ethereum/projhub\";\nimport { Container, List } from \"semantic-ui-react\";\n\nclass Users extends Component {\n\n  state = {\n    users: [],\n    userCount: 0,\n    usersList: []\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const userCount = await projhub.methods.userCount().call();\n\n    let users = [];\n    for(var i=0; i<userCount; i++) {\n      const user = await projhub.methods.users(i).call();\n      users.push(user);\n    }\n    console.log(users);\n    this.setState({ account: accs[0], userCount: userCount, users: users });\n\n    this.renderUsers();\n\n  }\n\n  renderUsers = () => {\n    const usersList = this.state.users.map((user, index) => {\n      return (\n        <List.Item key={index} style={{padding:\"10px\", border:\"1px solid\", borderColour:\"lightgrey\"}}>\n          <List.Content>\n            <List.Header style={{fontSize:\"18px\"}}>{user.name}</List.Header>\n            <List.Description>\n              <div>\n                <p style={{marginBottom:\"0px\"}}>Address: {user.owner}</p>\n                <p style={{marginTop:\"0px\"}}>Projects: {user.projCount}</p>\n              </div>\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      );\n    });\n\n    this.setState({ usersList: usersList });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container style={{padding:\"10px\"}}>\n          <h3>Users</h3>\n          <hr/>\n          <List items={this.state.usersList}/>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}