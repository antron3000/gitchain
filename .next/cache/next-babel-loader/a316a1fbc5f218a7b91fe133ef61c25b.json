{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/projects/show/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../../routes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia, prism, vs } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nclass ShowFile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      projId: 0,\n      fileIndex: 0,\n      fileHash: \"\",\n      fileContent: \"\",\n      fileName: \"\",\n      userAcc: \"\",\n      projName: \"\",\n      language: \"\"\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      projIndex: props.query.pid,\n      fileIndex: props.query.fid\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.projIndex);\n    const projId = this.props.projIndex;\n    const fileIndex = this.props.fileIndex;\n    const accounts = await web3.eth.getAccounts();\n    const projDetails = await projhub.methods.getProjectDetails(accounts[0], projId).call();\n    const projName = projDetails[1];\n    const fileHash = projDetails[4][fileIndex];\n    const fileName = projDetails[5][fileIndex];\n    const language = fileName.split(\".\")[1];\n    const data = await ipfs.files.get(fileHash);\n    console.log(data[0].content.toString());\n    this.setState({\n      projId: projId,\n      projName: projName,\n      fileIndex: fileIndex,\n      fileName: fileName,\n      userAcc: accounts[0],\n      fileHash: fileHash,\n      fileContent: data[0].content.toString(),\n      language: language\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(Container, {\n      style: {\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      style: {\n        color: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.projName, \" / \", this.state.fileName), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      style: {\n        border: \"1px solid\",\n        borderColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(SyntaxHighlighter, {\n      style: vs,\n      language: this.state.language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.fileContent)), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ShowFile;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/projects/show/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Container","Form","Input","Button","Router","Link","Prism","SyntaxHighlighter","okaidia","prism","vs","ShowFile","projId","fileIndex","fileHash","fileContent","fileName","userAcc","projName","language","getInitialProps","props","projIndex","query","pid","fid","componentDidMount","console","log","accounts","eth","getAccounts","projDetails","methods","getProjectDetails","call","split","data","files","get","content","toString","setState","render","padding","color","state","border","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../../routes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { okaidia, prism, vs } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nclass ShowFile extends Component {\n  state = {\n    projId: 0,\n    fileIndex: 0,\n    fileHash: \"\",\n    fileContent: \"\",\n    fileName: \"\",\n    userAcc: \"\",\n    projName: \"\",\n    language: \"\"\n  };\n\n  static async getInitialProps(props) {\n    return {\n      projIndex: props.query.pid,\n      fileIndex: props.query.fid\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.projIndex);\n    const projId = this.props.projIndex;\n    const fileIndex = this.props.fileIndex;\n    const accounts = await web3.eth.getAccounts();\n    const projDetails = await projhub.methods\n      .getProjectDetails(accounts[0], projId)\n      .call();\n    const projName = projDetails[1];\n    const fileHash = projDetails[4][fileIndex];\n    const fileName = projDetails[5][fileIndex];\n    const language = fileName.split(\".\")[1];\n    const data = await ipfs.files.get(fileHash);\n    console.log(data[0].content.toString());\n\n    this.setState({\n      projId: projId,\n      projName: projName,\n      fileIndex: fileIndex,\n      fileName: fileName,\n      userAcc: accounts[0],\n      fileHash: fileHash,\n      fileContent: data[0].content.toString(),\n      language: language\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container style={{ padding: \"10px\" }}>\n          <h3 style={{ color: \"grey\" }}>\n            {this.state.projName} / {this.state.fileName}\n          </h3>\n          <hr />\n          <div\n            style={{\n              border: \"1px solid\",\n              borderColor: \"grey\",\n            }}\n          >\n            <SyntaxHighlighter style={vs} language={this.state.language}>\n              {this.state.fileContent}\n            </SyntaxHighlighter>\n              {/* {this.state.fileContent.split(\"\\n\").map((line, key) => {\n                return (\n                  <SyntaxHighlighter key={key} language=\"cpp\">\n                    <p style={{ margin: \"0px\", fontSize: \"16px\", whiteSpace: \"break-spaces\"}}>{line}</p>\n                  </SyntaxHighlighter>\n                );\n              })} */}\n          </div>\n          <br />\n          <br />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ShowFile;\n\n"]},"metadata":{},"sourceType":"module"}