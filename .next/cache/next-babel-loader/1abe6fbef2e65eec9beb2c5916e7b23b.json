{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/projects/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router, Link } from \"../../routes\";\nimport { List, Container } from \"semantic-ui-react\";\n\nvar ShowProject = /*#__PURE__*/function (_Component) {\n  _inherits(ShowProject, _Component);\n\n  function ShowProject() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowProject);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowProject)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projId: 0,\n      projName: \"\",\n      projTime: \"\",\n      projFiles: [],\n      files: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFiles\", function _callee() {\n      var files;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              files = _this.state.projFiles.map(function (file, index) {\n                return __jsx(List.Item, {\n                  key: index,\n                  style: {\n                    padding: \"10px\",\n                    margin: \"10px\",\n                    border: \"1px solid\",\n                    borderColor: \"grey\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 44\n                  },\n                  __self: this\n                }, __jsx(List.Content, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 53\n                  },\n                  __self: this\n                }, __jsx(List.Header, {\n                  style: {\n                    marginBottom: \"10px\",\n                    fontSize: \"18px\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 54\n                  },\n                  __self: this\n                }, __jsx(Link, {\n                  route: \"/projects/\".concat(_this.state.projId, \"/\").concat(file),\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 55\n                  },\n                  __self: this\n                }, __jsx(\"a\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 56\n                  },\n                  __self: this\n                }, file)))));\n              });\n\n              _this.setState({\n                files: files\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ShowProject, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var projId, accounts, projDetails;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              projId = this.props.projId;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 3:\n              accounts = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(projhub.methods.getProjectDetails(accounts[0], projId).call());\n\n            case 6:\n              projDetails = _context2.sent;\n              this.setState({\n                projId: projId,\n                projName: projDetails[1],\n                projTime: projDetails[2],\n                projFiles: projDetails[3]\n              });\n              console.log(projId);\n              this.renderFiles();\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, __jsx(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.projName), __jsx(List, {\n        items: this.state.files,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", {\n                projId: props.query.id\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return ShowProject;\n}(Component);\n\nexport default ShowProject;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/projects/index.js"],"names":["React","Component","Layout","projhub","web3","Router","Link","List","Container","ShowProject","projId","projName","projTime","projFiles","files","state","map","file","index","padding","margin","border","borderColor","marginBottom","fontSize","setState","props","eth","getAccounts","accounts","methods","getProjectDetails","call","projDetails","console","log","renderFiles","query","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router, Link } from \"../../routes\";\nimport { List, Container } from \"semantic-ui-react\";\n\nclass ShowProject extends Component {\n  state = {\n    projId: 0,\n    projName: \"\",\n    projTime: \"\",\n    projFiles: [],\n    files: []\n  };\n\n  static async getInitialProps(props) {\n    return {\n      projId: props.query.id\n    };\n  }\n\n  async componentDidMount() {\n    const projId = this.props.projId;\n    const accounts = await web3.eth.getAccounts();\n    const projDetails = await projhub.methods\n      .getProjectDetails(accounts[0], projId)\n      .call();\n\n    this.setState({\n      projId: projId,\n      projName: projDetails[1],\n      projTime: projDetails[2],\n      projFiles: projDetails[3]\n    });\n    console.log(projId);\n\n    this.renderFiles();\n  }\n\n  renderFiles = async () => {\n    const files = this.state.projFiles.map((file, index) => {\n      return (\n        <List.Item\n          key={index}\n          style={{\n            padding: \"10px\",\n            margin: \"10px\",\n            border: \"1px solid\",\n            borderColor: \"grey\"\n          }}\n        >\n          <List.Content>\n            <List.Header style={{ marginBottom: \"10px\", fontSize: \"18px\" }}>\n              <Link route={`/projects/${this.state.projId}/${file}`}>\n                <a>{file}</a>\n              </Link>\n            </List.Header>\n          </List.Content>\n        </List.Item>\n      );\n    });\n    this.setState({ files: files });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <h5>{this.state.projName}</h5>\n          <List items={this.state.files} />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default ShowProject;\n"]},"metadata":{},"sourceType":"module"}