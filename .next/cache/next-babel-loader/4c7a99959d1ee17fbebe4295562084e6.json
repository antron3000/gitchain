{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button, List } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: \"\",\n      username: \"\",\n      useremail: \"\",\n      userid: \"\",\n      projCount: 0,\n      isUser: false,\n      name: \"\",\n      email: \"\",\n      items: []\n    });\n\n    _defineProperty(this, \"renderProjects\", async () => {\n      console.log(this.state.projCount);\n      const projCount = this.state.projCount;\n      const acc = this.state.account;\n      let projects = [];\n\n      for (let i = 0; i < projCount; i++) {\n        const proj = await projhub.methods.getProjectDetails(acc, i).call();\n        projects.push(proj);\n      }\n\n      const items = projects.map(async (project, index) => {\n        return {\n          key: index,\n          header: __jsx(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, project[0]),\n          extra: __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, project[1]),\n          fluid: true\n        };\n      });\n      this.setState({\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"createUser\", async () => {\n      const name = this.state.name;\n      const email = this.state.email;\n      const acc = this.state.account;\n\n      try {\n        await projhub.methods.createUser(name, email).send({\n          from: acc\n        });\n        console.log(\"User Registered\");\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    console.log(isUser);\n    this.setState({\n      account: accs[0],\n      isUser: isUser\n    });\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4]\n      });\n    }\n\n    this.renderProjects();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(Grid, {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(List, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      width: \"4\",\n      style: {\n        border: \"2px solid\",\n        borderColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Name:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Name\",\n      disabled: this.state.isUser,\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Email\",\n      disabled: this.state.isUser,\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), __jsx(Button, {\n      fluid: true,\n      color: \"teal\",\n      size: \"medium\",\n      content: \"Sign Up\",\n      onClick: this.createUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default ProjIndex;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/index.js"],"names":["React","Component","Layout","projhub","web3","Grid","Form","Input","Button","List","ProjIndex","account","username","useremail","userid","projCount","isUser","name","email","items","console","log","state","acc","projects","i","proj","methods","getProjectDetails","call","push","map","project","index","key","header","extra","fluid","setState","createUser","send","from","err","message","componentDidMount","accs","eth","getAccounts","userDetails","getUserDetails","renderProjects","render","margin","border","borderColor","width","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button, List } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  state = {\n    account: \"\",\n    username: \"\",\n    useremail: \"\",\n    userid: \"\",\n    projCount: 0,\n    isUser: false,\n    name: \"\",\n    email: \"\",\n    items: []\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n\n    console.log(isUser);\n    this.setState({ account: accs[0], isUser: isUser });\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4]\n      });\n    }\n\n    this.renderProjects();\n  }\n\n  renderProjects = async () => {\n    console.log(this.state.projCount);\n    const projCount = this.state.projCount;\n    const acc = this.state.account;\n    let projects = [];\n    for (let i = 0; i < projCount; i++) {\n      const proj = await projhub.methods.getProjectDetails(acc, i).call();\n      projects.push(proj);\n    }\n\n    const items = projects.map(async (project, index) => {\n      return {\n        key: index,\n        header: (<h3>{project[0]}</h3>),\n        extra: (<p>{project[1]}</p>),\n        fluid: true\n      };\n    });\n\n    this.setState({ items: items });\n  };\n\n  createUser = async () => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const acc = this.state.account;\n\n    try {\n      await projhub.methods.createUser(name, email).send({ from: acc });\n\n      console.log(\"User Registered\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Grid style={{ margin: \"10px\" }}>\n            <Grid.Column width=\"12\">\n              <List items={this.state.items}/>\n            </Grid.Column>\n            <Grid.Column\n              width=\"4\"\n              style={{ border: \"2px solid\", borderColor: \"grey\" }}\n            >\n              <Form>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Name:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Name\"\n                    disabled={this.state.isUser}\n                    value={this.state.name}\n                    onChange={event =>\n                      this.setState({ name: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Email:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Email\"\n                    disabled={this.state.isUser}\n                    value={this.state.email}\n                    onChange={event =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Button\n                  fluid\n                  color=\"teal\"\n                  size=\"medium\"\n                  content=\"Sign Up\"\n                  onClick={this.createUser}\n                />\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjIndex;\n"]},"metadata":{},"sourceType":"module"}