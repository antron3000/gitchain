{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/users/display/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\n\nclass DisplayUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      userIndex: 0,\n      userName: \"\",\n      userAddress: \"\",\n      userEmail: \"\",\n      userProjCount: 0,\n      projects: [],\n      projCards: []\n    });\n\n    _defineProperty(this, \"renderProjcards\", () => {\n      const projCards = this.state.projects.map((proj, index) => {\n        return {\n          header: __jsx(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50\n            },\n            __self: this\n          }, proj[1]),\n          description: __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51\n            },\n            __self: this\n          }, proj[3]),\n          extra: __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52\n            },\n            __self: this\n          }, proj[2])\n        };\n      });\n      this.setState({\n        projCards: projCards\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n    let projects = [];\n\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods.getProjectDetails(userDetails[1], i).call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n    this.renderProjcards();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"5\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      style: {\n        marginBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.userName), __jsx(\"p\", {\n      style: {\n        color: \"grey\",\n        marginTop: \"0px\",\n        fontSize: \"14px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.userAddress), __jsx(\"p\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Email: \", this.state.userEmail), __jsx(Button, {\n      color: \"teal\",\n      content: \"Follow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }))), __jsx(Grid.Column, {\n      width: \"10\",\n      style: {\n        borderLeft: \"1px solid\",\n        borderColor: \"grey\",\n        marginTop: \"20px\",\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Card.Group, {\n      items: this.state.projCards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default DisplayUser;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/users/display/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Grid","Container","Card","Button","DisplayUser","userIndex","userName","userAddress","userEmail","userProjCount","projects","projCards","state","map","proj","index","header","description","extra","setState","getInitialProps","props","query","componentDidMount","userDetails","methods","users","call","i","getProjectDetails","push","console","log","renderProjcards","render","marginTop","marginBottom","color","fontSize","overflow","textOverflow","borderLeft","borderColor","padding"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,IAA1B,EAAgCC,MAAhC,QAA8C,mBAA9C;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACNU,MAAAA,SAAS,EAAE,CADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,WAAW,EAAE,EAHP;AAINC,MAAAA,SAAS,EAAE,EAJL;AAKNC,MAAAA,aAAa,EAAE,CALT;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,SAAS,EAAE;AAPL,KAD0B;;AAAA,6CAuChB,MAAM;AACtB,YAAMA,SAAS,GAAG,KAAKC,KAAL,CAAWF,QAAX,CAAoBG,GAApB,CAAwB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzD,eAAO;AACLC,UAAAA,MAAM,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,IAAI,CAAC,CAAD,CAAT,CADJ;AAELG,UAAAA,WAAW,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIH,IAAI,CAAC,CAAD,CAAR,CAFT;AAGLI,UAAAA,KAAK,EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIJ,IAAI,CAAC,CAAD,CAAR;AAHH,SAAP;AAKD,OANiB,CAAlB;AAOA,WAAKK,QAAL,CAAc;AAAER,QAAAA,SAAS,EAAEA;AAAb,OAAd;AACD,KAhDiC;AAAA;;AAWlC,eAAaS,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,WAAO;AACLhB,MAAAA,SAAS,EAAEgB,KAAK,CAACC,KAAN,CAAYP;AADlB,KAAP;AAGD;;AAED,QAAMQ,iBAAN,GAA0B;AACxB,UAAMlB,SAAS,GAAG,KAAKgB,KAAL,CAAWhB,SAA7B;AACA,UAAMmB,WAAW,GAAG,MAAM3B,OAAO,CAAC4B,OAAR,CAAgBC,KAAhB,CAAsBrB,SAAtB,EAAiCsB,IAAjC,EAA1B;AAEA,QAAIjB,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,WAAW,CAAC,CAAD,CAA/B,EAAoCI,CAAC,EAArC,EAAyC;AACvC,YAAMd,IAAI,GAAG,MAAMjB,OAAO,CAAC4B,OAAR,CAAgBI,iBAAhB,CAAkCL,WAAW,CAAC,CAAD,CAA7C,EAAkDI,CAAlD,EAAqDD,IAArD,EAAnB;AACAjB,MAAAA,QAAQ,CAACoB,IAAT,CAAchB,IAAd;AACD;;AAED,SAAKK,QAAL,CAAc;AACZd,MAAAA,SAAS,EAAEA,SADC;AAEZE,MAAAA,WAAW,EAAEiB,WAAW,CAAC,CAAD,CAFZ;AAGZlB,MAAAA,QAAQ,EAAEkB,WAAW,CAAC,CAAD,CAHT;AAIZhB,MAAAA,SAAS,EAAEgB,WAAW,CAAC,CAAD,CAJV;AAKZf,MAAAA,aAAa,EAAEe,WAAW,CAAC,CAAD,CALd;AAMZd,MAAAA,QAAQ,EAAEA;AANE,KAAd;AAQAqB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,QAAZ;AACA,SAAKuB,eAAL;AACD;;AAaDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,GAAnB;AAAuB,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAC;AAAZ,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAC;AAAf,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKxB,KAAL,CAAWN,QAA9C,CADF,EAEE;AAAG,MAAA,KAAK,EAAE;AAAC+B,QAAAA,KAAK,EAAC,MAAP;AAAeF,QAAAA,SAAS,EAAC,KAAzB;AAAgCG,QAAAA,QAAQ,EAAC,MAAzC;AAAiDC,QAAAA,QAAQ,EAAC,QAA1D;AAAoEC,QAAAA,YAAY,EAAC;AAAjF,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyG,KAAK5B,KAAL,CAAWL,WAApH,CAFF,EAGE;AAAG,MAAA,KAAK,EAAE;AAAC+B,QAAAA,QAAQ,EAAC;AAAV,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAqC,KAAK1B,KAAL,CAAWJ,SAAhD,CAHF,EAIE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,OAAO,EAAC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF,EASE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,IAAnB;AAAwB,MAAA,KAAK,EAAE;AAACiC,QAAAA,UAAU,EAAC,WAAZ;AAAyBC,QAAAA,WAAW,EAAC,MAArC;AAA6CP,QAAAA,SAAS,EAAC,MAAvD;AAA+DQ,QAAAA,OAAO,EAAC;AAAvE,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWD,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF,CADF,CADF;AAmBD;;AAtEiC;;AAyEpC,eAAeP,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\n\nclass DisplayUser extends Component {\n  state = {\n    userIndex: 0,\n    userName: \"\",\n    userAddress: \"\",\n    userEmail: \"\",\n    userProjCount: 0,\n    projects: [],\n    projCards: []\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n\n    let projects = [];\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods.getProjectDetails(userDetails[1], i).call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n    this.renderProjcards();\n  }\n\n  renderProjcards = () => {\n    const projCards = this.state.projects.map((proj, index) => {\n      return {\n        header: (<h3>{proj[1]}</h3>),\n        description: (<p>{proj[3]}</p>),\n        extra: (<p>{proj[2]}</p>)\n      };\n    });\n    this.setState({ projCards: projCards });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Grid>\n            <Grid.Column width=\"5\" style={{ marginTop:\"20px\" }}>\n              <div >\n                <h2 style={{ marginBottom:\"0px\"}}>{this.state.userName}</h2>\n                <p style={{color:\"grey\", marginTop:\"0px\", fontSize:\"14px\", overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{this.state.userAddress}</p>\n                <p style={{fontSize:\"15px\"}}>Email: {this.state.userEmail}</p>\n                <Button color=\"teal\" content=\"Follow\"/>\n              </div>\n            </Grid.Column>\n            <Grid.Column width=\"10\" style={{borderLeft:\"1px solid\", borderColor:\"grey\", marginTop:\"20px\", padding:\"10px\"}}>\n              <Card.Group items={this.state.projCards}/>\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default DisplayUser;\n"]},"metadata":{},"sourceType":"module"}