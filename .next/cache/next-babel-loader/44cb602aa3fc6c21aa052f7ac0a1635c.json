{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/projects/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport { Router, Link } from \"../../routes\";\nimport { List, Container } from \"semantic-ui-react\";\n\nvar ShowProject = /*#__PURE__*/function (_Component) {\n  _inherits(ShowProject, _Component);\n\n  function ShowProject() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowProject);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowProject)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projId: 0,\n      projName: \"\",\n      projTime: \"\",\n      projFileHashes: [],\n      projDescription: \"\",\n      projFileNames: [],\n      files: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFiles\", function _callee() {\n      var files;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              files = _this.state.projFileNames.map(function (file, index) {\n                var hash = _this.state.projFileHashes[index];\n                var projId = _this.state.projId;\n                return __jsx(List.Item, {\n                  key: index,\n                  style: {\n                    padding: \"10px\",\n                    border: \"1px solid\",\n                    borderColor: \"lightgrey\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 50\n                  },\n                  __self: this\n                }, __jsx(List.Content, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 58\n                  },\n                  __self: this\n                }, __jsx(List.Header, {\n                  style: {\n                    fontSize: \"16px\"\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 59\n                  },\n                  __self: this\n                }, __jsx(Link, {\n                  route: \"/projects/\".concat(projId, \"/\").concat(index),\n                  params: {\n                    projName: _this.state.projName\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 60\n                  },\n                  __self: this\n                }, __jsx(\"a\", {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 61\n                  },\n                  __self: this\n                }, file)))));\n              });\n\n              _this.setState({\n                files: files\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ShowProject, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var projId, accounts, projDetails;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              projId = this.props.projId;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 3:\n              accounts = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(projhub.methods.getProjectDetails(accounts[0], projId).call());\n\n            case 6:\n              projDetails = _context2.sent;\n              this.setState({\n                projId: projId,\n                projName: projDetails[1],\n                projTime: projDetails[2],\n                projDescription: projDetails[3],\n                projFileHashes: projDetails[4],\n                projFileNames: projDetails[5]\n              });\n              console.log(projId);\n              this.renderFiles();\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(Container, {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        style: {\n          color: \"grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.projName, \" /\"), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), __jsx(List, {\n        items: this.state.files,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        style: {\n          padding: \"10px\",\n          border: \"1px solid\",\n          borderColor: \"lightgrey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        style: {\n          color: \"grey\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Description\"), __jsx(\"p\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.projDescription))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return {\n        projId: props.query.id\n      };\n    }\n  }]);\n\n  return ShowProject;\n}(Component);\n\nexport default ShowProject;","map":null,"metadata":{},"sourceType":"module"}