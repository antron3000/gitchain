{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/new/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../routes\";\nimport Dropzone from \"react-dropzone\";\n\nvar NewProject = /*#__PURE__*/function (_Component) {\n  _inherits(NewProject, _Component);\n\n  function NewProject() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewProject);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewProject)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projName: \"\",\n      description: \"\",\n      file1: \"\",\n      fileName: \"\",\n      fileBuffer: [],\n      fileNames: [],\n      fileCount: \"\",\n      fileInputs: [],\n      uid: 0,\n      username: \"\",\n      account: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var uid, projName, acc, fileNames, description, date, timestamp, fileBuffer, filesHash, i, ipfsHash;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              console.log(_this.state.fileBuffer);\n              console.log(_this.state.fileNames);\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.prev = 4;\n              uid = _this.state.uid;\n              projName = _this.state.projName;\n              acc = _this.state.account;\n              fileNames = _this.state.fileNames;\n              description = _this.state.description;\n              date = new Date();\n              date.setHours(date.getHours() + 5);\n              date.setMinutes(date.getMinutes() + 30);\n              timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n              fileBuffer = _this.state.fileBuffer;\n              filesHash = [];\n              i = 0;\n\n            case 17:\n              if (!(i < fileBuffer.length)) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(ipfs.add(fileBuffer[i]));\n\n            case 20:\n              ipfsHash = _context.sent;\n              filesHash.push(ipfsHash[0].hash);\n\n            case 22:\n              i++;\n              _context.next = 17;\n              break;\n\n            case 25:\n              console.log(acc, filesHash);\n              _context.next = 28;\n              return _regeneratorRuntime.awrap(projhub.methods.createProject(uid, projName, timestamp, description, filesHash, fileNames).send({\n                from: acc\n              }));\n\n            case 28:\n              Router.pushRoute(\"/\");\n              _context.next = 34;\n              break;\n\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0.message);\n\n            case 34:\n              _this.setState({\n                loading: false\n              });\n\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 31]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      // event.stopPropogation();\n      event.preventDefault();\n      var file = event.target.files[0];\n\n      _this.setState({\n        file1: URL.createObjectURL(file)\n      });\n\n      console.log(file);\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader, file.name);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDroppedFiles\", function (acceptedFiles) {\n      var _loop = function _loop() {\n        console.log(acceptedFiles[i]);\n        var file = acceptedFiles[i];\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = function () {\n          return _this.convertToBuffer(reader, file.path);\n        };\n      };\n\n      for (var i = 0; i < acceptedFiles.length; i++) {\n        _loop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToBuffer\", function _callee2(reader, fname) {\n      var buffer, fileBuffer, fileNames;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Buffer.from(reader.result));\n\n            case 2:\n              buffer = _context2.sent;\n              fileBuffer = _this.state.fileBuffer;\n              fileNames = _this.state.fileNames;\n              fileBuffer.push(buffer);\n              fileNames.push(fname);\n\n              _this.setState({\n                fileBuffer: fileBuffer,\n                fileNames: fileNames\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFileInputs\", function (event) {\n      var fileCount = event.target.value;\n      var fileInputs = [];\n\n      for (var i = 0; i < fileCount; i++) {\n        var row = __jsx(Form.Field, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Upload File \", i + 1), __jsx(Form.Input, {\n          style: {\n            fontSize: \"15px\"\n          },\n          type: \"file\",\n          onChange: function onChange(event) {\n            return _this.captureFile(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }));\n\n        fileInputs.push(row);\n      }\n\n      _this.setState({\n        fileCount: fileCount,\n        fileInputs: fileInputs\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(NewProject, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var account, userDetails;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              account = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(projhub.methods.getUserDetails(account[0]).call());\n\n            case 5:\n              userDetails = _context3.sent;\n              this.setState({\n                account: account[0],\n                uid: userDetails[0],\n                username: userDetails[2]\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, __jsx(Container, {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Create Project\"), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Project Name\"), __jsx(Form.Input, {\n        fluid: true,\n        style: {\n          fontSize: \"15px\"\n        },\n        placeholder: \"Project Name\",\n        value: this.state.projName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            projName: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Project Description\"), __jsx(Form.TextArea, {\n        rows: \"8\",\n        style: {\n          fontSize: \"15px\"\n        },\n        placeholder: \"Project Description\",\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(Dropzone, {\n        onDrop: function onDrop(acceptedFiles) {\n          return _this2.getDroppedFiles(acceptedFiles);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return __jsx(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, __jsx(\"div\", _extends({}, getRootProps(), {\n          style: {\n            border: \"1px solid\",\n            borderColor: \"lightgrey\",\n            height: \"300px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }), __jsx(\"input\", _extends({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })), __jsx(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }, \"Drag and drop files here or click to select files\"))));\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        content: \"Create Project\",\n        size: \"medium\",\n        color: \"teal\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NewProject;\n}(Component);\n\nexport default NewProject;\n{\n  /* <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 1</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 2</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field> */\n}","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/new/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Container","Form","Input","Button","Router","Link","Dropzone","NewProject","projName","description","file1","fileName","fileBuffer","fileNames","fileCount","fileInputs","uid","username","account","loading","event","preventDefault","console","log","state","setState","acc","date","Date","setHours","getHours","setMinutes","getMinutes","timestamp","toUTCString","replace","filesHash","i","length","add","ipfsHash","push","hash","methods","createProject","send","from","pushRoute","message","file","target","files","URL","createObjectURL","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","name","acceptedFiles","path","fname","Buffer","result","buffer","value","row","fontSize","captureFile","eth","getAccounts","getUserDetails","call","userDetails","padding","onSubmit","getDroppedFiles","getRootProps","getInputProps","border","borderColor","height"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../routes\";\nimport Dropzone from \"react-dropzone\";\n\nclass NewProject extends Component {\n  state = {\n    projName: \"\",\n    description: \"\",\n    file1: \"\",\n    fileName: \"\",\n    fileBuffer: [],\n    fileNames: [],\n    fileCount: \"\",\n    fileInputs: [],\n    uid: 0,\n    username: \"\",\n    account: \"\",\n    loading: false\n  };\n\n  async componentDidMount() {\n    const account = await web3.eth.getAccounts();\n    const userDetails = await projhub.methods.getUserDetails(account[0]).call();\n\n    this.setState({\n      account: account[0],\n      uid: userDetails[0],\n      username: userDetails[2]\n    });\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n    console.log(this.state.fileBuffer);\n    console.log(this.state.fileNames);\n    this.setState({ loading: true });\n    try {\n      const uid = this.state.uid;\n      const projName = this.state.projName;\n      const acc = this.state.account;\n      const fileNames = this.state.fileNames;\n      const description = this.state.description;\n      const date = new Date();\n      date.setHours(date.getHours() + 5);\n      date.setMinutes(date.getMinutes() + 30);\n      const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n\n      const fileBuffer = this.state.fileBuffer;\n      let filesHash = [];\n      for (var i = 0; i < fileBuffer.length; i++) {\n        const ipfsHash = await ipfs.add(fileBuffer[i]);\n        filesHash.push(ipfsHash[0].hash);\n      }\n      console.log(acc, filesHash);\n\n      await projhub.methods\n        .createProject(\n          uid,\n          projName,\n          timestamp,\n          description,\n          filesHash,\n          fileNames\n        )\n        .send({ from: acc });\n\n      Router.pushRoute(\"/\");\n    } catch (err) {\n      console.log(err.message);\n    }\n    this.setState({ loading: false });\n  };\n\n  captureFile = event => {\n    // event.stopPropogation();\n    event.preventDefault();\n\n    const file = event.target.files[0];\n    this.setState({ file1: URL.createObjectURL(file) });\n    console.log(file);\n\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader, file.name);\n  };\n\n  getDroppedFiles = acceptedFiles => {\n    for (var i = 0; i < acceptedFiles.length; i++) {\n      console.log(acceptedFiles[i]);\n      let file = acceptedFiles[i];\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n      reader.onloadend = () => this.convertToBuffer(reader, file.path);\n    }\n  };\n\n  convertToBuffer = async (reader, fname) => {\n    const buffer = await Buffer.from(reader.result);\n    let fileBuffer = this.state.fileBuffer;\n    let fileNames = this.state.fileNames;\n    fileBuffer.push(buffer);\n    fileNames.push(fname);\n    this.setState({ fileBuffer: fileBuffer, fileNames: fileNames });\n  };\n\n  renderFileInputs = event => {\n    const fileCount = event.target.value;\n    let fileInputs = [];\n    for (var i = 0; i < fileCount; i++) {\n      let row = (\n        <Form.Field key={i}>\n          <label style={{ fontSize: \"15px\" }}>Upload File {i + 1}</label>\n          <Form.Input\n            style={{ fontSize: \"15px\" }}\n            type=\"file\"\n            onChange={event => this.captureFile(event)}\n          />\n        </Form.Field>\n      );\n      fileInputs.push(row);\n    }\n\n    this.setState({ fileCount: fileCount, fileInputs: fileInputs });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container style={{ padding: \"10px\" }}>\n          <h3>Create Project</h3>\n          <hr />\n          <br />\n          <Form onSubmit={this.onSubmit}>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Name</label>\n              <Form.Input\n                fluid\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Name\"\n                value={this.state.projName}\n                onChange={event =>\n                  this.setState({ projName: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Description</label>\n              <Form.TextArea\n                rows=\"8\"\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Description\"\n                value={this.state.description}\n                onChange={event =>\n                  this.setState({ description: event.target.value })\n                }\n              />\n            </Form.Field>\n            {/* <input type=\"file\" webkitdirectory mozdirectory directory /> */}\n            {/* <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>No. of Files</label>\n              <Form.Input\n                fluid\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"No. of Files\"\n                value={this.state.fileCount}\n                onChange={event => this.renderFileInputs(event)}\n              />\n            </Form.Field>\n            {this.state.fileInputs} */}\n            <Form.Field>\n              <Dropzone\n                onDrop={acceptedFiles => this.getDroppedFiles(acceptedFiles)}\n              >\n                {({ getRootProps, getInputProps }) => (\n                  <section>\n                    <div\n                      {...getRootProps()}\n                      style={{\n                        border: \"1px solid\",\n                        borderColor: \"lightgrey\",\n                        height: \"300px\"\n                      }}\n                    >\n                      <input {...getInputProps()} />\n                      <center>\n                        <p>Drag and drop files here or click to select files</p>\n                      </center>\n                    </div>\n                  </section>\n                )}\n              </Dropzone>\n            </Form.Field>\n            <br />\n            <Button\n              loading={this.state.loading}\n              content=\"Create Project\"\n              size=\"medium\"\n              color=\"teal\"\n              fluid\n            />\n          </Form>\n          <br />\n          <br />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default NewProject;\n\n{\n  /* <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 1</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 2</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field> */\n}\n"]},"metadata":{},"sourceType":"module"}