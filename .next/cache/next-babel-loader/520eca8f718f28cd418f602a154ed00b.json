{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/new/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../routes\";\n\nclass NewProject extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      projName: \"\",\n      description: \"\",\n      file1: \"\",\n      fileName: \"\",\n      fileBuffer: [],\n      fileNames: [],\n      uid: 0,\n      username: \"\",\n      account: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      console.log(this.state.fileBuffer);\n      console.log(this.state.fileNames);\n      this.setState({\n        loading: true\n      });\n\n      try {\n        const uid = this.state.uid;\n        const projName = this.state.projName;\n        const acc = this.state.account;\n        const fileNames = this.state.fileNames;\n        const description = this.state.description;\n        const date = new Date();\n        date.setHours(date.getHours() + 5);\n        date.setMinutes(date.getMinutes() + 30);\n        const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n        const fileBuffer = this.state.fileBuffer;\n        let filesHash = [];\n\n        for (var i = 0; i < fileBuffer.length; i++) {\n          const ipfsHash = await ipfs.add(fileBuffer[i]);\n          filesHash.push(ipfsHash[0].hash);\n        }\n\n        console.log(acc, filesHash);\n        await projhub.methods.createProject(uid, projName, timestamp, description, filesHash, fileNames).send({\n          from: acc\n        });\n        Router.pushRoute(\"/\");\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n\n    _defineProperty(this, \"captureFile\", event => {\n      // event.stopPropogation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      this.setState({\n        file1: URL.createObjectURL(file)\n      }); // console.log(file);\n\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => this.convertToBuffer(reader, file.name);\n    });\n\n    _defineProperty(this, \"convertToBuffer\", async (reader, fname) => {\n      const buffer = await Buffer.from(reader.result);\n      let fileBuffer = this.state.fileBuffer;\n      let fileNames = this.state.fileNames;\n      fileBuffer.push(buffer);\n      fileNames.push(fname);\n      this.setState({\n        fileBuffer: fileBuffer,\n        fileNames: fileNames\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const account = await web3.eth.getAccounts();\n    const userDetails = await projhub.methods.getUserDetails(account[0]).call();\n    this.setState({\n      account: account[0],\n      uid: userDetails[0],\n      username: userDetails[2]\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Project Name\"), __jsx(Form.Input, {\n      fluid: true,\n      style: {\n        fontSize: \"15px\"\n      },\n      placeholder: \"Project Name\",\n      value: this.state.projName,\n      onChange: event => this.setState({\n        projName: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Project Description\"), __jsx(Form.TextArea, {\n      rows: \"8\",\n      style: {\n        fontSize: \"15px\"\n      },\n      placeholder: \"Project Description\",\n      value: this.state.description,\n      onChange: event => this.setState({\n        description: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Upload File 1\"), __jsx(Form.Input, {\n      style: {\n        fontSize: \"15px\"\n      },\n      type: \"file\",\n      onChange: event => this.captureFile(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Upload File 2\"), __jsx(Form.Input, {\n      style: {\n        fontSize: \"15px\"\n      },\n      type: \"file\",\n      onChange: event => this.captureFile(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), __jsx(Button, {\n      loading: this.state.loading,\n      content: \"Create Project\",\n      size: \"medium\",\n      color: \"teal\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NewProject;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/new/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Container","Form","Input","Button","Router","Link","NewProject","projName","description","file1","fileName","fileBuffer","fileNames","uid","username","account","loading","event","preventDefault","console","log","state","setState","acc","date","Date","setHours","getHours","setMinutes","getMinutes","timestamp","toUTCString","replace","filesHash","i","length","ipfsHash","add","push","hash","methods","createProject","send","from","pushRoute","err","message","file","target","files","URL","createObjectURL","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","name","fname","buffer","Buffer","result","componentDidMount","eth","getAccounts","userDetails","getUserDetails","call","render","onSubmit","fontSize","value","captureFile"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../routes\";\n\nclass NewProject extends Component {\n  state = {\n    projName: \"\",\n    description: \"\",\n    file1: \"\",\n    fileName: \"\",\n    fileBuffer: [],\n    fileNames: [],\n    uid: 0,\n    username: \"\",\n    account: \"\",\n    loading: false\n  };\n\n  async componentDidMount () {\n    const account = await web3.eth.getAccounts();\n    const userDetails = await projhub.methods.getUserDetails(account[0]).call();\n\n    this.setState({ account: account[0], uid: userDetails[0], username: userDetails[2] });\n\n  }\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(this.state.fileBuffer);\n    console.log(this.state.fileNames);\n    this.setState({ loading: true });\n    try {\n      const uid = this.state.uid;\n      const projName = this.state.projName;\n      const acc = this.state.account;\n      const fileNames = this.state.fileNames;\n      const description = this.state.description;\n      const date = new Date();\n      date.setHours(date.getHours() + 5);\n      date.setMinutes(date.getMinutes() + 30);\n      const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n\n      const fileBuffer = this.state.fileBuffer;\n      let filesHash = [];\n      for (var i=0; i<fileBuffer.length; i++) {\n        const ipfsHash = await ipfs.add(fileBuffer[i]);\n        filesHash.push(ipfsHash[0].hash);\n      }\n      console.log(acc, filesHash);\n\n      await projhub.methods\n        .createProject(uid, projName, timestamp, description, filesHash, fileNames)\n        .send({ from: acc });\n      \n      Router.pushRoute(\"/\");\n    }\n    catch(err) {\n      console.log(err.message);\n    }\n    this.setState({ loading: false });\n\n  }\n\n  captureFile = event => {\n    // event.stopPropogation();\n    event.preventDefault();\n\n    const file = event.target.files[0];\n    this.setState({ file1: URL.createObjectURL(file) });\n    // console.log(file);\n    \n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader, file.name);\n  }\n\n  convertToBuffer = async (reader, fname) => {\n    const buffer = await Buffer.from(reader.result);\n    let fileBuffer = this.state.fileBuffer;\n    let fileNames = this.state.fileNames;\n    fileBuffer.push(buffer);\n    fileNames.push(fname);\n    this.setState({ fileBuffer: fileBuffer, fileNames: fileNames });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Form onSubmit={this.onSubmit}>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Name</label>\n              <Form.Input\n                fluid\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Name\"\n                value={this.state.projName}\n                onChange={event =>\n                  this.setState({ projName: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Description</label>\n              <Form.TextArea\n                rows=\"8\"\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Description\"\n                value={this.state.description}\n                onChange={event =>\n                  this.setState({ description: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 1</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 2</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Button loading={this.state.loading} content=\"Create Project\" size=\"medium\" color=\"teal\" fluid/>\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default NewProject;\n"]},"metadata":{},"sourceType":"module"}