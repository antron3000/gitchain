{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/users/display/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\n\nclass DisplayUser extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      userIndex: 0,\n      userName: \"\",\n      userAddress: \"\",\n      userEmail: \"\",\n      userProjCount: 0,\n      projects: [],\n      projCards: []\n    });\n\n    _defineProperty(this, \"renderProjcards\", () => {\n      const projCards = this.state.projects.map((proj, index) => {\n        return {\n          key: index,\n          header: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, __jsx(Link, {\n            route: `/projects/${proj[0]}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, __jsx(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, proj[1])))),\n          description: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, proj[3])),\n          extra: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, proj[2]))\n        };\n      });\n      this.setState({\n        projCards: projCards\n      });\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n    let projects = [];\n\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods.getProjectDetails(userDetails[1], i).call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n    this.renderProjcards();\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"5\",\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      style: {\n        marginBottom: \"0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.userName), __jsx(\"p\", {\n      style: {\n        color: \"grey\",\n        marginTop: \"0px\",\n        fontSize: \"14px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.userAddress), __jsx(\"p\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Email: \", this.state.userEmail), __jsx(Button, {\n      color: \"teal\",\n      content: \"Follow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), __jsx(Grid.Column, {\n      width: \"10\",\n      style: {\n        borderLeft: \"1px solid\",\n        borderColor: \"lightgrey\",\n        marginTop: \"20px\",\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(Card.Group, {\n      items: this.state.projCards,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default DisplayUser;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/users/display/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Grid","Container","Card","Button","Link","DisplayUser","userIndex","userName","userAddress","userEmail","userProjCount","projects","projCards","state","map","proj","index","key","header","description","whiteSpace","overflow","textOverflow","extra","setState","getInitialProps","props","query","componentDidMount","userDetails","methods","users","call","i","getProjectDetails","push","console","log","renderProjcards","render","marginTop","marginBottom","color","fontSize","borderLeft","borderColor","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\n\nclass DisplayUser extends Component {\n  state = {\n    userIndex: 0,\n    userName: \"\",\n    userAddress: \"\",\n    userEmail: \"\",\n    userProjCount: 0,\n    projects: [],\n    projCards: []\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n\n    let projects = [];\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods\n        .getProjectDetails(userDetails[1], i)\n        .call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n    this.renderProjcards();\n  }\n\n  renderProjcards = () => {\n    const projCards = this.state.projects.map((proj, index) => {\n      return {\n        key: index,\n        header: (\n          <div>\n            <Link route={`/projects/${proj[0]}`}>\n              <a>\n                <h4>{proj[1]}</h4>\n              </a>\n            </Link>\n          </div>\n        ),\n        description: (\n          <div>\n            <p\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\"\n              }}\n            >\n              {proj[3]}\n            </p>\n          </div>\n        ),\n        extra: (\n          <div>\n            <p>{proj[2]}</p>\n          </div>\n        )\n      };\n    });\n    this.setState({ projCards: projCards });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Grid>\n            <Grid.Column width=\"5\" style={{ marginTop: \"20px\" }}>\n              <div>\n                <h2 style={{ marginBottom: \"0px\" }}>{this.state.userName}</h2>\n                <p\n                  style={{\n                    color: \"grey\",\n                    marginTop: \"0px\",\n                    fontSize: \"14px\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\"\n                  }}\n                >\n                  {this.state.userAddress}\n                </p>\n                <p style={{ fontSize: \"15px\" }}>\n                  Email: {this.state.userEmail}\n                </p>\n                <Button color=\"teal\" content=\"Follow\" />\n              </div>\n            </Grid.Column>\n            <Grid.Column\n              width=\"10\"\n              style={{\n                borderLeft: \"1px solid\",\n                borderColor: \"lightgrey\",\n                marginTop: \"20px\",\n                padding: \"10px\"\n              }}\n            >\n              <Card.Group items={this.state.projCards} />\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default DisplayUser;\n"]},"metadata":{},"sourceType":"module"}