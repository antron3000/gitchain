{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/new/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\n\nclass NewProject extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      projName: \"\",\n      file1: \"\",\n      file2: \"\",\n      fileBuffer: []\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      console.log(this.state.fileBuffer);\n\n      try {\n        const date = new Date();\n        date.setHours(date.getHours() + 5);\n        date.setMinutes(date.getMinutes() + 30);\n        const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n        const fileBuffer = this.state.fileBuffer;\n        let filesHash = [];\n\n        for (var i = 0; i < fileBuffer.length; i++) {\n          const ipfsHash = await ipfs.add(fileBuffer[i]);\n          filesHash.push(ipfsHash);\n        }\n\n        console.log(filesHash);\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n\n    _defineProperty(this, \"captureFile\", event => {\n      // event.stopPropogation();\n      event.preventDefault();\n      const file = event.target.files[0];\n      this.setState({\n        file1: URL.createObjectURL(file)\n      });\n      console.log(file);\n      let reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = () => this.convertToBuffer(reader);\n    });\n\n    _defineProperty(this, \"convertToBuffer\", async reader => {\n      const buffer = await Buffer.from(reader.result);\n      let fileBuffer = this.state.fileBuffer;\n      fileBuffer.push(buffer);\n      this.setState({\n        fileBuffer: fileBuffer\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Project Name\"), __jsx(Form.Input, {\n      fluid: true,\n      style: {\n        fontSize: \"15px\"\n      },\n      placeholder: \"Project Name\",\n      value: this.state.projName,\n      onChange: event => this.setState({\n        projName: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Upload File 1\"), __jsx(Form.Input, {\n      style: {\n        fontSize: \"15px\"\n      },\n      type: \"file\",\n      onChange: event => this.captureFile(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        fontSize: \"15px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Upload File 2\"), __jsx(Form.Input, {\n      style: {\n        fontSize: \"15px\"\n      },\n      type: \"file\",\n      onChange: event => this.captureFile(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), __jsx(Button, {\n      content: \"Create Project\",\n      size: \"medium\",\n      color: \"teal\",\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default NewProject;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/new/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Container","Form","Input","Button","NewProject","projName","file1","file2","fileBuffer","event","preventDefault","console","log","state","date","Date","setHours","getHours","setMinutes","getMinutes","timestamp","toUTCString","replace","filesHash","i","length","ipfsHash","add","push","err","message","file","target","files","setState","URL","createObjectURL","reader","window","FileReader","readAsArrayBuffer","onloadend","convertToBuffer","buffer","Buffer","from","result","render","onSubmit","fontSize","value","captureFile"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\n\n\nclass NewProject extends Component {\n  state = {\n    projName: \"\",\n    file1: \"\",\n    file2: \"\",\n    fileBuffer: []\n  };\n\n  onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(this.state.fileBuffer);\n\n    try {\n      const date = new Date();\n      date.setHours(date.getHours() + 5);\n      date.setMinutes(date.getMinutes() + 30);\n      const timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n\n      const fileBuffer = this.state.fileBuffer;\n      let filesHash = [];\n      for (var i=0; i<fileBuffer.length; i++) {\n        const ipfsHash = await ipfs.add(fileBuffer[i]);\n        filesHash.push(ipfsHash);\n      }\n\n      console.log(filesHash);\n    }\n    catch(err) {\n      console.log(err.message);\n    }\n\n\n  }\n\n  captureFile = event => {\n    // event.stopPropogation();\n    event.preventDefault();\n\n    const file = event.target.files[0];\n    this.setState({ file1: URL.createObjectURL(file) });\n    console.log(file);\n\n    let reader = new window.FileReader();\n    reader.readAsArrayBuffer(file);\n    reader.onloadend = () => this.convertToBuffer(reader);\n  }\n\n  convertToBuffer = async reader => {\n    const buffer = await Buffer.from(reader.result);\n    let fileBuffer = this.state.fileBuffer;\n    fileBuffer.push(buffer);\n    this.setState({ fileBuffer: fileBuffer });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Form onSubmit={this.onSubmit}>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Project Name</label>\n              <Form.Input\n                fluid\n                style={{ fontSize: \"15px\" }}\n                placeholder=\"Project Name\"\n                value={this.state.projName}\n                onChange={event =>\n                  this.setState({ projName: event.target.value })\n                }\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 1</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 2</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Button content=\"Create Project\" size=\"medium\" color=\"teal\" fluid/>\n          </Form>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default NewProject;\n"]},"metadata":{},"sourceType":"module"}