{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/projects/show/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../../routes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n\nclass ShowFile extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      projId: 0,\n      fileIndex: 0,\n      fileHash: \"\",\n      fileContent: \"\",\n      fileName: \"\",\n      userAcc: \"\",\n      projName: \"\",\n      language: \"\"\n    });\n  }\n\n  static async getInitialProps(props) {\n    return {\n      projIndex: props.query.pid,\n      fileIndex: props.query.fid\n    };\n  }\n\n  async componentDidMount() {\n    console.log(this.props.projIndex);\n    const projId = this.props.projIndex;\n    const fileIndex = this.props.fileIndex;\n    const accounts = await web3.eth.getAccounts();\n    const projDetails = await projhub.methods.getProjectDetails(accounts[0], projId).call();\n    const projName = projDetails[1];\n    const fileHash = projDetails[4][fileIndex];\n    const fileName = projDetails[5][fileIndex];\n    const language = fileName.split(\".\")[1];\n    const data = await ipfs.files.get(fileHash);\n    console.log(data[0].content.toString());\n    this.setState({\n      projId: projId,\n      projName: projName,\n      fileIndex: fileIndex,\n      fileName: fileName,\n      userAcc: accounts[0],\n      fileHash: fileHash,\n      fileContent: data[0].content.toString(),\n      language: language\n    });\n  }\n\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, __jsx(Container, {\n      style: {\n        padding: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      style: {\n        color: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.projName, this.state.fileName), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      style: {\n        border: \"1px solid\",\n        borderColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(SyntaxHighlighter, {\n      customStyle: {\n        fontSize: \"16px\"\n      },\n      language: this.state.language,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, this.state.fileContent)), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ShowFile;","map":null,"metadata":{},"sourceType":"module"}