{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Container, Form, Input, Button } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../../routes\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\n\nvar ShowFile = /*#__PURE__*/function (_Component) {\n  _inherits(ShowFile, _Component);\n\n  function ShowFile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShowFile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShowFile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projId: 0,\n      fileIndex: 0,\n      fileHash: \"\",\n      fileContent: \"\",\n      fileName: \"\",\n      userAcc: \"\",\n      projName: \"\",\n      language: \"\"\n    });\n\n    return _this;\n  }\n\n  _createClass(ShowFile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var projId, fileIndex, accounts, projDetails, projName, fileHash, fileName, language, data;\n      return _regeneratorRuntime.async(function componentDidMount$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(this.props.projIndex);\n              projId = this.props.projIndex;\n              fileIndex = this.props.fileIndex;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 5:\n              accounts = _context.sent;\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(projhub.methods.getProjectDetails(accounts[0], projId).call());\n\n            case 8:\n              projDetails = _context.sent;\n              projName = projDetails[1];\n              fileHash = projDetails[4][fileIndex];\n              fileName = projDetails[5][fileIndex];\n              language = fileName.split(\".\")[1];\n              _context.next = 15;\n              return _regeneratorRuntime.awrap(ipfs.files.get(fileHash));\n\n            case 15:\n              data = _context.sent;\n              console.log(data[0].content.toString());\n              this.setState({\n                projId: projId,\n                projName: projName,\n                fileIndex: fileIndex,\n                fileName: fileName,\n                userAcc: accounts[0],\n                fileHash: fileHash,\n                fileContent: data[0].content.toString(),\n                language: language\n              });\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(Container, {\n        style: {\n          padding: \"10px\"\n        }\n      }, __jsx(\"h3\", {\n        style: {\n          color: \"grey\"\n        }\n      }, this.state.projName, \" / \", this.state.fileName), __jsx(\"hr\", null), __jsx(\"div\", {\n        style: {\n          border: \"1px solid\",\n          borderColor: \"grey\"\n        }\n      }, __jsx(SyntaxHighlighter, {\n        customStyle: {\n          fontSize: \"16px\"\n        },\n        language: this.state.language\n      }, this.state.fileContent)), __jsx(\"br\", null), __jsx(\"br\", null)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", {\n                projIndex: props.query.pid,\n                fileIndex: props.query.fid\n              });\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return ShowFile;\n}(Component);\n\nexport default ShowFile;","map":null,"metadata":{},"sourceType":"module"}