{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/users/display/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\n\nvar DisplayUser = /*#__PURE__*/function (_Component) {\n  _inherits(DisplayUser, _Component);\n\n  function DisplayUser() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DisplayUser);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DisplayUser)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      userIndex: 0,\n      userName: \"\",\n      userAddress: \"\",\n      userEmail: \"\",\n      userProjCount: 0,\n      projects: [],\n      projCards: [],\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onFollow\", function _callee() {\n      var userAcc, currUser, currUserId;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.setState({\n                loading: true\n              });\n\n              userAcc = _this.state.userAddress;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 4:\n              currUser = _context.sent;\n              currUser = currUser[0];\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(projhub.methods.getUserDetails(currUser).call());\n\n            case 8:\n              currUserId = _context.sent;\n              currUserId = currUserId[0];\n              console.log(currUser, currUserId);\n              _context.prev = 11;\n              _context.next = 14;\n              return _regeneratorRuntime.awrap(projhub.methods.follwUser(currUserId, userAcc).send({\n                from: currUser\n              }));\n\n            case 14:\n              _context.next = 19;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](11);\n              console.log(_context.t0.msg);\n\n            case 19:\n              _this.setState({\n                loading: false\n              });\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[11, 16]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderProjcards\", function () {\n      var projCards = _this.state.projects.map(function (proj, index) {\n        var acc = _this.state.userAddress;\n        return {\n          key: index,\n          header: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76\n            },\n            __self: this\n          }, __jsx(Link, {\n            route: \"/projects/\".concat(acc, \"/\").concat(proj[0]),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78\n            },\n            __self: this\n          }, __jsx(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, proj[1])))),\n          description: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            style: {\n              whiteSpace: \"nowrap\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, proj[3])),\n          extra: __jsx(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, proj[2]))\n        };\n      });\n\n      _this.setState({\n        projCards: projCards\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(DisplayUser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var userIndex, userDetails, projects, i, proj;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              userIndex = this.props.userIndex;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(projhub.methods.users(userIndex).call());\n\n            case 3:\n              userDetails = _context2.sent;\n              projects = [];\n              i = 0;\n\n            case 6:\n              if (!(i < userDetails[4])) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(projhub.methods.getProjectDetails(userDetails[1], i).call());\n\n            case 9:\n              proj = _context2.sent;\n              projects.push(proj);\n\n            case 11:\n              i++;\n              _context2.next = 6;\n              break;\n\n            case 14:\n              this.setState({\n                userIndex: userIndex,\n                userAddress: userDetails[1],\n                userName: userDetails[2],\n                userEmail: userDetails[3],\n                userProjCount: userDetails[4],\n                projects: projects\n              });\n              console.log(projects);\n              this.renderProjcards();\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, __jsx(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, __jsx(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(Grid.Column, {\n        width: \"5\",\n        style: {\n          marginTop: \"20px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        style: {\n          marginBottom: \"0px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.userName), __jsx(\"p\", {\n        style: {\n          color: \"grey\",\n          marginTop: \"0px\",\n          fontSize: \"14px\",\n          overflow: \"hidden\",\n          textOverflow: \"ellipsis\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, this.state.userAddress), __jsx(\"p\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Email: \", this.state.userEmail), __jsx(Button, {\n        loading: this.state.loading,\n        color: \"teal\",\n        content: \"Follow\",\n        onClick: function onClick() {\n          return _this2.onFollow;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }))), __jsx(Grid.Column, {\n        width: \"10\",\n        style: {\n          borderLeft: \"1px solid\",\n          borderColor: \"lightgrey\",\n          marginTop: \"20px\",\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, __jsx(Card.Group, {\n        items: this.state.projCards,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(props) {\n      return _regeneratorRuntime.async(function getInitialProps$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              return _context3.abrupt(\"return\", {\n                userIndex: props.query.index\n              });\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return DisplayUser;\n}(Component);\n\nexport default DisplayUser;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/users/display/index.js"],"names":["React","Component","Layout","projhub","web3","ipfs","Grid","Container","Card","Button","Link","DisplayUser","userIndex","userName","userAddress","userEmail","userProjCount","projects","projCards","loading","setState","userAcc","state","eth","getAccounts","currUser","methods","getUserDetails","call","currUserId","console","log","follwUser","send","from","msg","map","proj","index","acc","key","header","description","whiteSpace","overflow","textOverflow","extra","props","users","userDetails","i","getProjectDetails","push","renderProjcards","marginTop","marginBottom","color","fontSize","onFollow","borderLeft","borderColor","padding","query"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\n\nclass DisplayUser extends Component {\n  state = {\n    userIndex: 0,\n    userName: \"\",\n    userAddress: \"\",\n    userEmail: \"\",\n    userProjCount: 0,\n    projects: [],\n    projCards: [],\n    loading: false\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n\n    let projects = [];\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods\n        .getProjectDetails(userDetails[1], i)\n        .call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects\n    });\n    console.log(projects);\n    this.renderProjcards();\n  }\n\n  onFollow = async () => {\n    this.setState({ loading: true });\n    const userAcc = this.state.userAddress;\n    let currUser = await web3.eth.getAccounts();\n    currUser = currUser[0];\n    let currUserId = await projhub.methods.getUserDetails(currUser).call();\n    currUserId = currUserId[0];\n    console.log(currUser, currUserId);\n    try {\n      await projhub.methods\n        .follwUser(currUserId, userAcc)\n        .send({ from: currUser });\n    }\n    catch (err) {\n      console.log(err.msg);\n    }\n    this.setState({ loading: false });\n  }\n\n  renderProjcards = () => {\n    const projCards = this.state.projects.map((proj, index) => {\n      const acc = this.state.userAddress;\n      return {\n        key: index,\n        header: (\n          <div>\n            <Link route={`/projects/${acc}/${proj[0]}`}>\n              <a>\n                <h4>{proj[1]}</h4>\n              </a>\n            </Link>\n          </div>\n        ),\n        description: (\n          <div>\n            <p\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\"\n              }}\n            >\n              {proj[3]}\n            </p>\n          </div>\n        ),\n        extra: (\n          <div>\n            <p>{proj[2]}</p>\n          </div>\n        )\n      };\n    });\n    this.setState({ projCards: projCards });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Grid>\n            <Grid.Column width=\"5\" style={{ marginTop: \"20px\" }}>\n              <div>\n                <h2 style={{ marginBottom: \"0px\" }}>{this.state.userName}</h2>\n                <p\n                  style={{\n                    color: \"grey\",\n                    marginTop: \"0px\",\n                    fontSize: \"14px\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\"\n                  }}\n                >\n                  {this.state.userAddress}\n                </p>\n                <p style={{ fontSize: \"15px\" }}>\n                  Email: {this.state.userEmail}\n                </p>\n                <Button loading={this.state.loading} color=\"teal\" content=\"Follow\" onClick={() => this.onFollow}/>\n              </div>\n            </Grid.Column>\n            <Grid.Column\n              width=\"10\"\n              style={{\n                borderLeft: \"1px solid\",\n                borderColor: \"lightgrey\",\n                marginTop: \"20px\",\n                padding: \"10px\"\n              }}\n            >\n              <Card.Group items={this.state.projCards} />\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default DisplayUser;\n"]},"metadata":{},"sourceType":"module"}