{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/new/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport projhub from \"../../ethereum/projhub\";\nimport web3 from \"../../ethereum/web3\";\nimport ipfs from \"../../ethereum/ipfs\";\nimport { Container, Form, Input, Button, Icon } from \"semantic-ui-react\";\nimport { Router, Link } from \"../../routes\";\nimport Dropzone from \"react-dropzone\";\n\nvar NewProject = /*#__PURE__*/function (_Component) {\n  _inherits(NewProject, _Component);\n\n  function NewProject() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NewProject);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NewProject)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      projName: \"\",\n      description: \"\",\n      file1: \"\",\n      fileName: \"\",\n      fileBuffer: [],\n      fileNames: [],\n      fileCount: \"\",\n      fileInputs: [],\n      uid: 0,\n      username: \"\",\n      account: \"\",\n      loading: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSubmit\", function _callee(event) {\n      var uid, projName, acc, fileNames, description, date, timestamp, fileBuffer, filesHash, i, ipfsHash;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              console.log(_this.state.fileBuffer);\n              console.log(_this.state.fileNames);\n\n              _this.setState({\n                loading: true\n              });\n\n              _context.prev = 4;\n              uid = _this.state.uid;\n              projName = _this.state.projName;\n              acc = _this.state.account;\n              fileNames = _this.state.fileNames;\n              description = _this.state.description;\n              date = new Date();\n              date.setHours(date.getHours() + 5);\n              date.setMinutes(date.getMinutes() + 30);\n              timestamp = date.toUTCString().replace(\"GMT\", \"IST\");\n              fileBuffer = _this.state.fileBuffer;\n              filesHash = [];\n              i = 0;\n\n            case 17:\n              if (!(i < fileBuffer.length)) {\n                _context.next = 25;\n                break;\n              }\n\n              _context.next = 20;\n              return _regeneratorRuntime.awrap(ipfs.add(fileBuffer[i]));\n\n            case 20:\n              ipfsHash = _context.sent;\n              filesHash.push(ipfsHash[0].hash);\n\n            case 22:\n              i++;\n              _context.next = 17;\n              break;\n\n            case 25:\n              console.log(acc, filesHash);\n              _context.next = 28;\n              return _regeneratorRuntime.awrap(projhub.methods.createProject(uid, projName, timestamp, description, filesHash, fileNames).send({\n                from: acc\n              }));\n\n            case 28:\n              Router.pushRoute(\"/\");\n              _context.next = 34;\n              break;\n\n            case 31:\n              _context.prev = 31;\n              _context.t0 = _context[\"catch\"](4);\n              console.log(_context.t0.message);\n\n            case 34:\n              _this.setState({\n                loading: false\n              });\n\n            case 35:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[4, 31]], Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"captureFile\", function (event) {\n      // event.stopPropogation();\n      event.preventDefault();\n      var file = event.target.files[0];\n\n      _this.setState({\n        file1: URL.createObjectURL(file)\n      });\n\n      console.log(file);\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        return _this.convertToBuffer(reader, file.name);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getDroppedFiles\", function (acceptedFiles) {\n      var _loop = function _loop() {\n        console.log(acceptedFiles[i]);\n        var file = acceptedFiles[i];\n        var reader = new window.FileReader();\n        reader.readAsArrayBuffer(file);\n\n        reader.onloadend = function () {\n          return _this.convertToBuffer(reader, file.path);\n        };\n      };\n\n      for (var i = 0; i < acceptedFiles.length; i++) {\n        _loop();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToBuffer\", function _callee2(reader, fname) {\n      var buffer, fileBuffer, fileNames;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Buffer.from(reader.result));\n\n            case 2:\n              buffer = _context2.sent;\n              fileBuffer = _this.state.fileBuffer;\n              fileNames = _this.state.fileNames;\n              fileBuffer.push(buffer);\n              fileNames.push(fname);\n\n              _this.setState({\n                fileBuffer: fileBuffer,\n                fileNames: fileNames\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderFileInputs\", function (event) {\n      var fileCount = event.target.value;\n      var fileInputs = [];\n\n      for (var i = 0; i < fileCount; i++) {\n        var row = __jsx(Form.Field, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, __jsx(\"label\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, \"Upload File \", i + 1), __jsx(Form.Input, {\n          style: {\n            fontSize: \"15px\"\n          },\n          type: \"file\",\n          onChange: function onChange(event) {\n            return _this.captureFile(event);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }));\n\n        fileInputs.push(row);\n      }\n\n      _this.setState({\n        fileCount: fileCount,\n        fileInputs: fileInputs\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(NewProject, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var account, userDetails;\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(web3.eth.getAccounts());\n\n            case 2:\n              account = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(projhub.methods.getUserDetails(account[0]).call());\n\n            case 5:\n              userDetails = _context3.sent;\n              this.setState({\n                account: account[0],\n                uid: userDetails[0],\n                username: userDetails[2]\n              });\n\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, __jsx(Container, {\n        style: {\n          padding: \"10px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, __jsx(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Create Project\"), __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }), __jsx(Form, {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Project Name\"), __jsx(Form.Input, {\n        fluid: true,\n        style: {\n          fontSize: \"15px\"\n        },\n        placeholder: \"Project Name\",\n        value: this.state.projName,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            projName: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Project Description\"), __jsx(Form.TextArea, {\n        rows: \"8\",\n        style: {\n          fontSize: \"15px\"\n        },\n        placeholder: \"Project Description\",\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            description: event.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      })), __jsx(Form.Field, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, __jsx(\"label\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Project Files\"), __jsx(Dropzone, {\n        onDrop: function onDrop(acceptedFiles) {\n          return _this2.getDroppedFiles(acceptedFiles);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, function (_ref) {\n        var getRootProps = _ref.getRootProps,\n            getInputProps = _ref.getInputProps;\n        return __jsx(\"section\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, __jsx(\"div\", _extends({}, getRootProps(), {\n          style: {\n            border: \"1px solid\",\n            borderColor: \"lightgrey\",\n            borderRadius: \"4px\",\n            height: \"300px\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }), __jsx(\"input\", _extends({}, getInputProps(), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        })), __jsx(Icon, {\n          name: \"folder open outline\",\n          size: \"big\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }), __jsx(\"p\", {\n          style: {\n            fontSize: \"15px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"Drag and drop files here or click to select files\")));\n      })), __jsx(Button, {\n        loading: this.state.loading,\n        content: \"Create Project\",\n        size: \"medium\",\n        color: \"teal\",\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NewProject;\n}(Component);\n\nexport default NewProject;\n{\n  /* <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 1</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label style={{ fontSize: \"15px\" }}>Upload File 2</label>\n              <Form.Input\n                style={{ fontSize: \"15px\" }}\n                type=\"file\"\n                onChange={event => this.captureFile(event)}\n              />\n            </Form.Field> */\n}","map":null,"metadata":{},"sourceType":"module"}