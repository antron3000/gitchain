{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: \"\",\n      manager: \"\",\n      isUser: false\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const manager = await projhub.methods.manager().call();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    this.setState({\n      account: accs[0],\n      manager: manager,\n      isUser: isUser\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(Grid, {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.account)), __jsx(Grid.Column, {\n      width: \"6\",\n      style: {\n        border: \"2px solid\",\n        borderColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Name\"), __jsx(Input, {\n      disabled: this.state.isUser,\n      fluid: true,\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default ProjIndex;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/index.js"],"names":["React","Component","Layout","projhub","web3","Grid","Form","Input","ProjIndex","account","manager","isUser","componentDidMount","accs","eth","getAccounts","methods","call","setState","render","margin","state","border","borderColor","name","event","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,KAArB,QAAkC,mBAAlC;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACxB;AACNQ,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,MAAM,EAAE;AAHF,KADwB;AAAA;;AAOhC,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,IAAI,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAnB;AACA,UAAML,OAAO,GAAG,MAAMP,OAAO,CAACa,OAAR,CAAgBN,OAAhB,GAA0BO,IAA1B,EAAtB;AACA,UAAMN,MAAM,GAAG,MAAMR,OAAO,CAACa,OAAR,CAAgBL,MAAhB,CAAuBE,IAAI,CAAC,CAAD,CAA3B,EAAgCI,IAAhC,EAArB;AAEA,SAAKC,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAEI,IAAI,CAAC,CAAD,CAAf;AAAoBH,MAAAA,OAAO,EAAEA,OAA7B;AAAsCC,MAAAA,MAAM,EAAEA;AAA9C,KAAd;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AAEP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWZ,OAAhB,CADF,CADF,EAIE,MAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAC,GAAnB;AAAuB,MAAA,KAAK,EAAE;AAACa,QAAAA,MAAM,EAAC,WAAR;AAAqBC,QAAAA,WAAW,EAAC;AAAjC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,MAAM,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,MAAC,KAAD;AACE,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWV,MADvB;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,KAAK,EAAE,KAAKU,KAAL,CAAWG,IAHpB;AAIE,MAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKP,QAAL,CAAc;AAAEM,QAAAA,IAAI,EAAEC,KAAK,CAACC,MAAN,CAAaC;AAArB,OAAd,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CAJF,CADF,CADF,CADF;AAwBD;;AAzC+B;;AA4ClC,eAAenB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  state = {\n    account: \"\",\n    manager: \"\",\n    isUser: false\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const manager = await projhub.methods.manager().call();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n\n    this.setState({ account: accs[0], manager: manager, isUser: isUser });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Layout>\n          <Grid style={{margin:\"10px\"}}>\n            <Grid.Column width=\"10\">\n              <h2>{this.state.account}</h2>\n            </Grid.Column>\n            <Grid.Column width=\"6\" style={{border:\"2px solid\", borderColor:\"grey\"}}>\n              <Form>\n                <Form.Field inline>\n                  <label>Name</label>\n                  <Input \n                    disabled={this.state.isUser} \n                    fluid\n                    value={this.state.name}\n                    onChange={event => this.setState({ name: event.target.value })}\n                  />\n                </Form.Field>\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjIndex;\n"]},"metadata":{},"sourceType":"module"}