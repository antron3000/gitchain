{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: \"\",\n      username: \"\",\n      useremail: \"\",\n      userid: \"\",\n      projCount: 0,\n      isUser: false,\n      name: \"\",\n      email: \"\"\n    });\n\n    _defineProperty(this, \"renderProjects\", async () => {\n      console.log(this.state.projCount);\n    });\n\n    _defineProperty(this, \"createUser\", async () => {\n      const name = this.state.name;\n      const email = this.state.email;\n      const acc = this.state.account;\n\n      try {\n        await projhub.methods.createUser(name, email).send({\n          from: acc\n        });\n        console.log(\"User Registered\");\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    console.log(isUser);\n    this.setState({\n      account: accs[0],\n      manager: manager,\n      isUser: isUser\n    });\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4]\n      });\n    }\n\n    this.renderProjects();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(Grid, {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.account)), __jsx(Grid.Column, {\n      width: \"4\",\n      style: {\n        border: \"2px solid\",\n        borderColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Name:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Name\",\n      disabled: this.state.isUser,\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Email\",\n      disabled: this.state.isUser,\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), __jsx(Button, {\n      fluid: true,\n      color: \"teal\",\n      size: \"medium\",\n      content: \"Sign Up\",\n      onClick: this.createUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default ProjIndex;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/index.js"],"names":["React","Component","Layout","projhub","web3","Grid","Form","Input","Button","ProjIndex","account","username","useremail","userid","projCount","isUser","name","email","console","log","state","acc","methods","createUser","send","from","err","message","componentDidMount","accs","eth","getAccounts","call","setState","manager","userDetails","getUserDetails","renderProjects","render","margin","border","borderColor","width","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  state = {\n    account: \"\",\n    username: \"\",\n    useremail: \"\",\n    userid: \"\",\n    projCount: 0,\n    isUser: false,\n    name: \"\",\n    email: \"\"\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n\n    console.log(isUser);\n    this.setState({ account: accs[0], manager: manager, isUser: isUser});\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4]\n      });\n    }\n    \n    this.renderProjects();\n  }\n\n  renderProjects = async () => {\n\n    console.log(this.state.projCount);\n\n  }\n\n  createUser = async () => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const acc = this.state.account;\n\n    try {\n      await projhub.methods\n        .createUser(name, email)\n        .send({ from: acc});\n\n      console.log(\"User Registered\");\n    }\n    catch(err) {\n      console.log(err.message);\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Grid style={{ margin: \"10px\" }}>\n            <Grid.Column width=\"12\">\n              <h2>{this.state.account}</h2>\n            </Grid.Column>\n            <Grid.Column\n              width=\"4\"\n              style={{ border: \"2px solid\", borderColor: \"grey\" }}\n            >\n              <Form>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Name:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Name\"\n                    disabled={this.state.isUser}\n                    value={this.state.name}\n                    onChange={event =>\n                      this.setState({ name: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Email:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Email\"\n                    disabled={this.state.isUser}\n                    value={this.state.email}\n                    onChange={event =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Button\n                  fluid\n                  color=\"teal\"\n                  size=\"medium\"\n                  content=\"Sign Up\"\n                  onClick={this.createUser}\n                />\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjIndex;\n"]},"metadata":{},"sourceType":"module"}