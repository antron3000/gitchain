{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button, List } from \"semantic-ui-react\";\nimport { Router, Link } from \"../routes\";\n\nclass ProjIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: \"\",\n      username: \"\",\n      useremail: \"\",\n      userid: \"\",\n      projCount: 0,\n      isUser: false,\n      name: \"\",\n      email: \"\",\n      items: [],\n      loading: false,\n      follows: [],\n      currUser: \"\",\n      userCount: 0,\n      followList: []\n    });\n\n    _defineProperty(this, \"renderFollowers\", async () => {\n      console.log(this.state.follows);\n      const followList = this.state.follows.map((user, index) => {\n        return __jsx(List.Item, {\n          key: index,\n          style: {\n            padding: \"5px\",\n            margin: \"5px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, __jsx(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, __jsx(List.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, __jsx(Link, {\n          route: `/users/${index}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, user.name))), __jsx(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Projects: \", user.projCount))));\n      });\n      this.setState({\n        followList: followList\n      });\n    });\n\n    _defineProperty(this, \"renderProjects\", async () => {\n      console.log(this.state.projCount);\n      const projCount = this.state.projCount;\n      const acc = this.state.account;\n      let projects = [];\n\n      for (let i = 0; i < projCount; i++) {\n        const proj = await projhub.methods.getProjectDetails(acc, i).call();\n        projects.push(proj);\n      } // console.log(projects[0][0], projects[0][1]);\n\n\n      const items = projects.map((project, index) => {\n        const acc = this.state.account;\n        return __jsx(List.Item, {\n          key: index,\n          style: {\n            padding: \"10px\",\n            margin: \"10px\",\n            border: \"1px solid\",\n            borderColor: \"grey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, __jsx(List.Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, __jsx(List.Header, {\n          style: {\n            marginBottom: \"10px\",\n            fontSize: \"18px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, __jsx(Link, {\n          route: `/projects/${acc}/${project[0]}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, project[1]))), __jsx(List.Description, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, __jsx(\"p\", {\n          style: {\n            color: \"grey\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, project[2]), __jsx(\"p\", {\n          style: {\n            color: \"black\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, project[3]))));\n      });\n      this.setState({\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"createUser\", async () => {\n      const name = this.state.name;\n      const email = this.state.email;\n      const acc = this.state.account;\n      this.setState({\n        name: \"\",\n        email: \"\",\n        loading: true\n      });\n\n      try {\n        await projhub.methods.createUser(name, email).send({\n          from: acc\n        });\n        console.log(\"User Registered\");\n      } catch (err) {\n        console.log(err.message);\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    const userCount = await projhub.methods.userCount().call();\n    console.log(isUser);\n    this.setState({\n      account: accs[0],\n      isUser: isUser\n    });\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      let follows = [];\n\n      for (let i = 0; i < userCount; i++) {\n        const user = await projhub.methods.users(i).call();\n        const isFollower = await projhub.methods.isFollower(userDetails[0], user.owner).call();\n\n        if (isFollower) {\n          follows.push(user);\n        }\n      }\n\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4],\n        follows: follows,\n        userCount: userCount\n      });\n      this.renderProjects();\n      this.renderFollowers();\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, __jsx(Grid, {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"4\",\n      style: {\n        backgroundColor: \"lightgrey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Followers\"), __jsx(List, {\n      divided: true,\n      items: this.state.followList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      width: \"8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      style: {\n        marginLeft: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Projects\"), __jsx(List, {\n      items: this.state.items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), __jsx(Grid.Column, {\n      width: \"4\",\n      style: {\n        backgroundColor: \"lightgrey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Signup\"), __jsx(Form, {\n      style: {\n        padding: \"10px\",\n        border: \"2px solid\",\n        borderColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Name:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Name\",\n      disabled: this.state.isUser,\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Email\",\n      disabled: this.state.isUser,\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), __jsx(Button, {\n      loading: this.state.loading,\n      disabled: this.state.isUser,\n      fluid: true,\n      color: \"teal\",\n      size: \"medium\",\n      content: \"Sign Up\",\n      onClick: this.createUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default ProjIndex;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/index.js"],"names":["React","Component","Layout","projhub","web3","Grid","Form","Input","Button","List","Router","Link","ProjIndex","account","username","useremail","userid","projCount","isUser","name","email","items","loading","follows","currUser","userCount","followList","console","log","state","map","user","index","padding","margin","setState","acc","projects","i","proj","methods","getProjectDetails","call","push","project","border","borderColor","marginBottom","fontSize","color","whiteSpace","overflow","textOverflow","createUser","send","from","err","message","componentDidMount","accs","eth","getAccounts","userDetails","getUserDetails","users","isFollower","owner","renderProjects","renderFollowers","render","backgroundColor","marginLeft","width","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button, List } from \"semantic-ui-react\";\nimport { Router, Link } from \"../routes\";\n\nclass ProjIndex extends Component {\n  state = {\n    account: \"\",\n    username: \"\",\n    useremail: \"\",\n    userid: \"\",\n    projCount: 0,\n    isUser: false,\n    name: \"\",\n    email: \"\",\n    items: [],\n    loading: false,\n    follows: [],\n    currUser: \"\",\n    userCount: 0,\n    followList: []\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    const userCount = await projhub.methods.userCount().call();\n\n    console.log(isUser);\n    this.setState({ account: accs[0], isUser: isUser });\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n\n      let follows = []\n      for (let i=0; i<userCount; i++) {\n        const user = await projhub.methods.users(i).call();\n        const isFollower = await projhub.methods.isFollower(userDetails[0], user.owner).call();\n        if (isFollower) {\n          follows.push(user);\n        }\n      }\n\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4],\n        follows: follows,\n        userCount: userCount\n      });\n      this.renderProjects();\n      this.renderFollowers();\n    }\n  }\n\n  renderFollowers = async () => {\n    console.log(this.state.follows);\n    const followList = this.state.follows.map((user, index) => {\n      return (\n        <List.Item key={index} style={{padding:\"5px\", margin:\"5px\"}}>\n          <List.Content>\n            <List.Header>\n              <Link route={`/users/${index}`}>\n                <a>{user.name}</a>\n              </Link>\n            </List.Header>\n            <List.Description>\n              <p>Projects: {user.projCount}</p>\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      );\n    });\n    this.setState({ followList: followList });\n  }\n\n  renderProjects = async () => {\n    console.log(this.state.projCount);\n    const projCount = this.state.projCount;\n    const acc = this.state.account;\n    let projects = [];\n    for (let i = 0; i < projCount; i++) {\n      const proj = await projhub.methods.getProjectDetails(acc, i).call();\n      projects.push(proj);\n    }\n\n    // console.log(projects[0][0], projects[0][1]);\n\n    const items = projects.map((project, index) => {\n      const acc = this.state.account;\n      return (\n        <List.Item key={index} style={{padding:\"10px\", margin:\"10px\", border:\"1px solid\", borderColor:\"grey\"}}>\n          <List.Content>\n            <List.Header style={{marginBottom:\"10px\", fontSize:\"18px\"}}>\n              <Link route={`/projects/${acc}/${project[0]}`}>\n                <a>{project[1]}</a>\n              </Link>\n            </List.Header>\n            <List.Description>\n              <p style={{color:\"grey\"}}>{project[2]}</p>\n              <p style={{color:\"black\", whiteSpace:\"nowrap\", overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{project[3]}</p>\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      );\n    });\n\n    this.setState({ items: items });\n  };\n\n  createUser = async () => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const acc = this.state.account;\n    this.setState({ name: \"\", email: \"\", loading: true });\n    try {\n      await projhub.methods.createUser(name, email).send({ from: acc });\n\n      console.log(\"User Registered\");\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    this.setState({ loading: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Grid style={{ margin: \"10px\" }}>\n            <Grid.Column width=\"4\" style={{backgroundColor:\"lightgrey\"}}>\n              <h3 style={{marginLeft:\"10px\"}}>Followers</h3>\n              <List divided items={this.state.followList}/>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <h3 style={{marginLeft:\"10px\"}}>Projects</h3>\n              <List items={this.state.items}/>\n            </Grid.Column>\n            <Grid.Column width=\"4\" style={{backgroundColor:\"lightgrey\"}}>\n              <h3>Signup</h3>\n              <Form style={{ padding:\"10px\", border: \"2px solid\", borderColor: \"grey\" }}>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Name:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Name\"\n                    disabled={this.state.isUser}\n                    value={this.state.name}\n                    onChange={event =>\n                      this.setState({ name: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Email:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Email\"\n                    disabled={this.state.isUser}\n                    value={this.state.email}\n                    onChange={event =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Button\n                  loading={this.state.loading}\n                  disabled={this.state.isUser}\n                  fluid\n                  color=\"teal\"\n                  size=\"medium\"\n                  content=\"Sign Up\"\n                  onClick={this.createUser}\n                />\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjIndex;\n"]},"metadata":{},"sourceType":"module"}