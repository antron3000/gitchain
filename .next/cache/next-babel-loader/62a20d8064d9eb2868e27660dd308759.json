{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button, List } from \"semantic-ui-react\";\nimport { Router, Link } from \"../routes\";\n\nclass ProjIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: \"\",\n      username: \"\",\n      useremail: \"\",\n      userid: \"\",\n      projCount: 0,\n      isUser: false,\n      name: \"\",\n      email: \"\",\n      items: []\n    });\n\n    _defineProperty(this, \"renderProjects\", async () => {\n      console.log(this.state.projCount);\n      const projCount = this.state.projCount;\n      const acc = this.state.account;\n      let projects = [];\n\n      for (let i = 0; i < projCount; i++) {\n        const proj = await projhub.methods.getProjectDetails(acc, i).call();\n        projects.push(proj);\n      } // console.log(projects[0][0], projects[0][1]);\n\n\n      const items = projects.map((project, index) => {\n        return __jsx(List.Item, {\n          key: index,\n          style: {\n            padding: \"10px\",\n            margin: \"10px\",\n            border: \"1px solid\",\n            borderColor: \"grey\"\n          }\n        }, __jsx(List.Content, null, __jsx(List.Header, {\n          style: {\n            marginBottom: \"10px\",\n            fontSize: \"18px\"\n          }\n        }, __jsx(Link, {\n          route: `/projects/${project[0]}`\n        }, __jsx(\"a\", null, project[1]))), __jsx(List.Description, null, __jsx(\"p\", {\n          style: {\n            color: \"grey\"\n          }\n        }, project[2]), __jsx(\"p\", {\n          style: {\n            color: \"black\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\"\n          }\n        }, project[3]))));\n      });\n      this.setState({\n        items: items\n      });\n    });\n\n    _defineProperty(this, \"createUser\", async () => {\n      const name = this.state.name;\n      const email = this.state.email;\n      const acc = this.state.account;\n      this.setState({\n        name: \"\",\n        email: \"\"\n      });\n\n      try {\n        await projhub.methods.createUser(name, email).send({\n          from: acc\n        });\n        console.log(\"User Registered\");\n      } catch (err) {\n        console.log(err.message);\n      }\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    console.log(isUser);\n    this.setState({\n      account: accs[0],\n      isUser: isUser\n    });\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4]\n      });\n      this.renderProjects();\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Layout, null, __jsx(Grid, {\n      style: {\n        margin: \"10px\"\n      }\n    }, __jsx(Grid.Column, {\n      width: \"4\"\n    }, __jsx(\"h3\", null, \"Followers\")), __jsx(Grid.Column, {\n      width: \"8\"\n    }, __jsx(\"h3\", {\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, \"Projects\"), __jsx(List, {\n      items: this.state.items\n    })), __jsx(Grid.Column, {\n      width: \"4\",\n      style: {\n        border: \"2px solid\",\n        borderColor: \"grey\"\n      }\n    }, __jsx(\"h3\", null, \"Signup\"), __jsx(Form, null, __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      }\n    }, \"Name:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Name\",\n      disabled: this.state.isUser,\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      })\n    })), __jsx(Form.Field, {\n      inline: true\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      }\n    }, \"Email:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Email\",\n      disabled: this.state.isUser,\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      })\n    })), __jsx(Button, {\n      disabled: this.state.isUser,\n      fluid: true,\n      color: \"teal\",\n      size: \"medium\",\n      content: \"Sign Up\",\n      onClick: this.createUser\n    }))))));\n  }\n\n}\n\nexport default ProjIndex;","map":null,"metadata":{},"sourceType":"module"}