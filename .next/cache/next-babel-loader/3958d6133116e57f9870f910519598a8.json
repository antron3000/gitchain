{"ast":null,"code":"var _jsxFileName = \"/home/hrishib/Desktop/gitchain/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      account: \"\",\n      manager: \"\",\n      isUser: false,\n      name: \"\",\n      email: \"\"\n    });\n  }\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const manager = await projhub.methods.manager().call();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    console.log(isUser);\n    this.setState({\n      account: accs[0],\n      manager: manager,\n      isUser: isUser\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, __jsx(Grid, {\n      style: {\n        margin: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, __jsx(Grid.Column, {\n      width: \"12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.account)), __jsx(Grid.Column, {\n      width: \"4\",\n      style: {\n        border: \"2px solid\",\n        borderColor: \"grey\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Name:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Name\",\n      disabled: this.state.isUser,\n      value: this.state.name,\n      onChange: event => this.setState({\n        name: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      inline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      style: {\n        width: \"15%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Email:\"), __jsx(Input, {\n      style: {\n        width: \"70%\"\n      },\n      placeholder: \"Email\",\n      disabled: this.state.isUser,\n      value: this.state.email,\n      onChange: event => this.setState({\n        email: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), __jsx(Button, {\n      fluid: true,\n      color: \"teal\",\n      size: \"medium\",\n      content: \"Sign Up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default ProjIndex;","map":{"version":3,"sources":["/home/hrishib/Desktop/gitchain/pages/index.js"],"names":["React","Component","Layout","projhub","web3","Grid","Form","Input","Button","ProjIndex","account","manager","isUser","name","email","componentDidMount","accs","eth","getAccounts","methods","call","console","log","setState","render","margin","state","border","borderColor","width","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button } from \"semantic-ui-react\";\n\nclass ProjIndex extends Component {\n  state = {\n    account: \"\",\n    manager: \"\",\n    isUser: false,\n    name: \"\",\n    email: \"\"\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const manager = await projhub.methods.manager().call();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n    console.log(isUser);\n    this.setState({ account: accs[0], manager: manager, isUser: isUser });\n  }\n\n  render() {\n\n    return (\n      <div>\n        <Layout>\n          <Grid style={{margin:\"10px\"}}>\n            <Grid.Column width=\"12\">\n              <h2>{this.state.account}</h2>\n            </Grid.Column>\n            <Grid.Column width=\"4\" style={{border:\"2px solid\", borderColor:\"grey\"}}>\n              <Form>\n                <Form.Field inline >\n                  <label style={{width:\"15%\"}}>Name:</label>\n                  <Input \n                    style={{width:\"70%\"}}\n                    placeholder=\"Name\"\n                    disabled={this.state.isUser}\n                    value={this.state.name}\n                    onChange={event => this.setState({ name: event.target.value })}\n                  />\n                </Form.Field>\n                <Form.Field inline>\n                  <label style={{width:\"15%\"}}>Email:</label>\n                  <Input \n                    style={{width:\"70%\"}}\n                    placeholder=\"Email\"\n                    disabled={this.state.isUser}\n                    value={this.state.email}\n                    onChange={event => this.setState({ email: event.target.value })}\n                  />\n                </Form.Field>\n                <Button fluid color=\"teal\" size=\"medium\" content=\"Sign Up\"/>\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjIndex;\n"]},"metadata":{},"sourceType":"module"}