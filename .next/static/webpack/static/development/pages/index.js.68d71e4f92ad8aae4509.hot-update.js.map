{"version":3,"file":"static/webpack/static/development/pages/index.js.68d71e4f92ad8aae4509.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport projhub from \"../ethereum/projhub\";\nimport web3 from \"../ethereum/web3\";\nimport { Grid, Form, Input, Button, List } from \"semantic-ui-react\";\nimport { Router, Link } from \"../routes\";\n\nclass ProjIndex extends Component {\n  state = {\n    account: \"\",\n    username: \"\",\n    useremail: \"\",\n    userid: \"\",\n    projCount: 0,\n    isUser: false,\n    name: \"\",\n    email: \"\",\n    items: []\n  };\n\n  async componentDidMount() {\n    const accs = await web3.eth.getAccounts();\n    const isUser = await projhub.methods.isUser(accs[0]).call();\n\n    console.log(isUser);\n    this.setState({ account: accs[0], isUser: isUser });\n\n    if (isUser) {\n      const userDetails = await projhub.methods.getUserDetails(accs[0]).call();\n      this.setState({\n        userid: userDetails[0],\n        username: userDetails[2],\n        email: userDetails[3],\n        projCount: userDetails[4]\n      });\n      this.renderProjects();\n    }\n  }\n\n  renderProjects = async () => {\n    console.log(this.state.projCount);\n    const projCount = this.state.projCount;\n    const acc = this.state.account;\n    let projects = [];\n    for (let i = 0; i < projCount; i++) {\n      const proj = await projhub.methods.getProjectDetails(acc, i).call();\n      projects.push(proj);\n    }\n\n    // console.log(projects[0][0], projects[0][1]);\n\n    const items = projects.map((project, index) => {\n      return (\n        <List.Item key={index} style={{padding:\"10px\", margin:\"10px\", border:\"1px solid\", borderColor:\"grey\"}}>\n          <List.Content>\n            <List.Header style={{marginBottom:\"10px\", fontSize:\"18px\"}}>\n              <Link route={`/projects/${project[0]}`}>\n                <a>{project[1]}</a>\n              </Link>\n            </List.Header>\n            <List.Description>\n              <p style={{color:\"grey\"}}>{project[2]}</p>\n              <p style={{color:\"black\", whiteSpace:\"nowrap\", overflow:\"hidden\", textOverflow:\"ellipsis\"}}>{project[3]}</p>\n            </List.Description>\n          </List.Content>\n        </List.Item>\n      );\n    });\n\n    this.setState({ items: items });\n  };\n\n  createUser = async () => {\n    const name = this.state.name;\n    const email = this.state.email;\n    const acc = this.state.account;\n    this.setState({ name: \"\", email: \"\" });\n    try {\n      await projhub.methods.createUser(name, email).send({ from: acc });\n\n      console.log(\"User Registered\");\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Grid style={{ margin: \"10px\" }}>\n            <Grid.Column width=\"4\">\n              <h3>Followers</h3>\n            </Grid.Column>\n            <Grid.Column width=\"8\">\n              <h3 style={{marginLeft:\"10px\"}}>Projects</h3>\n              <List items={this.state.items}/>\n            </Grid.Column>\n            <Grid.Column\n              width=\"4\"\n              style={{ border: \"2px solid\", borderColor: \"grey\" }}\n            >\n              <h3>Signup</h3>\n              <Form>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Name:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Name\"\n                    disabled={this.state.isUser}\n                    value={this.state.name}\n                    onChange={event =>\n                      this.setState({ name: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Form.Field inline>\n                  <label style={{ width: \"15%\" }}>Email:</label>\n                  <Input\n                    style={{ width: \"70%\" }}\n                    placeholder=\"Email\"\n                    disabled={this.state.isUser}\n                    value={this.state.email}\n                    onChange={event =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                </Form.Field>\n                <Button\n                  disabled={this.state.isUser}\n                  fluid\n                  color=\"teal\"\n                  size=\"medium\"\n                  content=\"Sign Up\"\n                  onClick={this.createUser}\n                />\n              </Form>\n            </Grid.Column>\n          </Grid>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default ProjIndex;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AA8BA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAMA;AACA;AACA;AARA;AAKA;AALA;AAAA;AACA;AADA;AAUA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAAA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAMA;AAAA;AACA;AAPA;AAQA;AARA;AAAA;AACA;AADA;AAAA;AAAA;AAUA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;AApDA;AACA;;AADA;;AACA;AACA;;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;;;;;;;;;;AAkDA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;;;;AAvIA;AACA;AAyIA;;;;A","sourceRoot":""}