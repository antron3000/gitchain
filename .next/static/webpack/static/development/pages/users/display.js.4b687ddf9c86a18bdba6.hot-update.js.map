{"version":3,"file":"static/webpack/static/development/pages/users/display.js.4b687ddf9c86a18bdba6.hot-update.js","sources":["webpack:///./pages/users/display/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../../components/Layout\";\nimport projhub from \"../../../ethereum/projhub\";\nimport web3 from \"../../../ethereum/web3\";\nimport ipfs from \"../../../ethereum/ipfs\";\nimport { Grid, Container, Card, Button } from \"semantic-ui-react\";\nimport { Link } from \"../../../routes\";\n\nclass DisplayUser extends Component {\n  state = {\n    userIndex: 0,\n    userName: \"\",\n    userAddress: \"\",\n    userEmail: \"\",\n    userProjCount: 0,\n    projects: [],\n    projCards: [],\n    loading: false,\n    currUserAdd: \"\",\n    currUserId: \"\",\n    isFollower: true\n  };\n\n  static async getInitialProps(props) {\n    return {\n      userIndex: props.query.index\n    };\n  }\n\n  async componentDidMount() {\n    const userIndex = this.props.userIndex;\n    const userDetails = await projhub.methods.users(userIndex).call();\n    let currUserAdd = await web3.eth.getAccounts();\n    currUserAdd = currUserAdd[0];\n    let currUserId = await projhub.methods.getUserDetails(currUserAdd).call();\n    currUserId = currUserId[0];\n    const isFollower = await projhub.methods.isFollower(currUserId, userDetails[1]).call();\n    console.log(isFollower);\n\n    let projects = [];\n    for (let i = 0; i < userDetails[4]; i++) {\n      const proj = await projhub.methods\n        .getProjectDetails(userDetails[1], i)\n        .call();\n      projects.push(proj);\n    }\n\n    this.setState({\n      userIndex: userIndex,\n      userAddress: userDetails[1],\n      userName: userDetails[2],\n      userEmail: userDetails[3],\n      userProjCount: userDetails[4],\n      projects: projects,\n      currUserAdd: currUserAdd,\n      currUserId: currUserId\n    });\n    console.log(projects);\n    this.renderProjcards();\n  }\n\n  onFollow = async () => {\n    this.setState({ loading: true });\n    const userAcc = this.state.userAddress;\n    const currUserAdd = this.state.currUserAdd;\n    const currUserId = this.state.currUserId;\n    console.log(currUserAdd, currUserId);\n    try {\n      await projhub.methods\n        .followUser(currUserId, userAcc)\n        .send({ from: currUserAdd });\n    }\n    catch (err) {\n      console.log(err.msg);\n    }\n    this.setState({ loading: false });\n  }\n\n  renderProjcards = () => {\n    const projCards = this.state.projects.map((proj, index) => {\n      const acc = this.state.userAddress;\n      return {\n        key: index,\n        header: (\n          <div>\n            <Link route={`/projects/${acc}/${proj[0]}`}>\n              <a>\n                <h4>{proj[1]}</h4>\n              </a>\n            </Link>\n          </div>\n        ),\n        description: (\n          <div>\n            <p\n              style={{\n                whiteSpace: \"nowrap\",\n                overflow: \"hidden\",\n                textOverflow: \"ellipsis\"\n              }}\n            >\n              {proj[3]}\n            </p>\n          </div>\n        ),\n        extra: (\n          <div>\n            <p>{proj[2]}</p>\n          </div>\n        )\n      };\n    });\n    this.setState({ projCards: projCards });\n  };\n\n  render() {\n    return (\n      <Layout>\n        <Container>\n          <Grid>\n            <Grid.Column width=\"5\" style={{ marginTop: \"20px\" }}>\n              <div>\n                <h2 style={{ marginBottom: \"0px\" }}>{this.state.userName}</h2>\n                <p\n                  style={{\n                    color: \"grey\",\n                    marginTop: \"0px\",\n                    fontSize: \"14px\",\n                    overflow: \"hidden\",\n                    textOverflow: \"ellipsis\"\n                  }}\n                >\n                  {this.state.userAddress}\n                </p>\n                <p style={{ fontSize: \"15px\" }}>\n                  Email: {this.state.userEmail}\n                </p>\n                <Button disabled={!!this.state.isFollower} loading={this.state.loading} color=\"teal\" content=\"Follow\" onClick={() => this.onFollow()}/>\n              </div>\n            </Grid.Column>\n            <Grid.Column\n              width=\"10\"\n              style={{\n                borderLeft: \"1px solid\",\n                borderColor: \"lightgrey\",\n                marginTop: \"20px\",\n                padding: \"10px\"\n              }}\n            >\n              <Card.Group items={this.state.projCards} />\n            </Grid.Column>\n          </Grid>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default DisplayUser;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AACA;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AASA;AAAA;AACA;AAVA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAYA;AACA;AAbA;AAcA;AAAA;AAAA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1BA;AA8BA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;AApFA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;;AACA;AACA;;AADA;AACA;;AACA;AACA;;AADA;AACA;AAEA;AACA;AACA;;AADA;;;;;;AACA;AACA;;AADA;AAGA;AACA;;AALA;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;;;;;;;;;;AAwpIA;;;;;AACA;AACA;AADA;AACA;;;;;;;;;;;AAjBA;AACA;AAqJA;;;;A","sourceRoot":""}